{"version":3,"file":"static/chunks/pages/guilds-2ff08e50e99dc284.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/Error.js","webpack://_N_E/./node_modules/@mui/icons-material/KeyboardArrowUp.js","webpack://_N_E/./node_modules/@mui/icons-material/Refresh.js","webpack://_N_E/?1ef6","webpack://_N_E/./pages/guilds.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/guilds\",\n      function () {\n        return require(\"private-next-pages/guilds.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/guilds\"])\n      });\n    }\n  ","import React, { useCallback, useEffect, useState } from 'react';\nimport { getGuilds } from '../firebase';\nimport { CircularProgress, Collapse, LinearProgress, Paper, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\nimport { NextSeo } from 'next-seo';\nimport { getDuration, numberWithCommas, prefix, tryToParse } from '../utility/helpers';\nimport IconButton from '@mui/material/IconButton';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport Box from '@mui/material/Box';\nimport { format, isValid } from 'date-fns';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Tooltip from '../components/Tooltip';\nimport { getGuildLevel } from '../parsers/guild';\nconst Guilds = () => {\n  const [listener, setListener] = useState({\n    func: null\n  });\n  const [guilds, setGuilds] = useState(null);\n  const [openIndex, setOpenIndex] = useState(null);\n  const snapshotDate = tryToParse(sessionStorage.getItem('snapshotDate'));\n  const [error, setError] = useState('');\n  const parseGuildsData = useCallback(topGuilds => {\n    return topGuilds?.slice(0, 100)?.map(guild => {\n      const leader = guild?.members?.find(({\n        g\n      }) => g === 0);\n      const topContributors = guild?.members?.sort((a, b) => b?.e - a?.e)?.slice(0, 5)?.map(({\n        a,\n        e\n      }) => ({\n        name: a,\n        gpEarned: e\n      }));\n      return {\n        guildIcon: guild?.guildIcon,\n        guildName: guild?.guildName,\n        totalGp: guild?.totalGp,\n        membersCount: guild?.members?.length,\n        leader,\n        topContributors\n      };\n    });\n  }, []);\n  const handleGuildsUpdate = ({\n    guilds,\n    error\n  }) => {\n    if (error) {\n      return setError('An unexpected error has occurred');\n    }\n    const parsedGuilds = parseGuildsData(guilds);\n    sessionStorage.setItem('guildsLeaderboard', JSON.stringify(parsedGuilds));\n    sessionStorage.setItem('snapshotDate', new Date().getTime());\n    setGuilds(parsedGuilds);\n  };\n  const handleRefresh = () => {\n    if (!guilds) return null;\n    setGuilds(null);\n    sessionStorage.removeItem('guildsLeaderboard');\n    sessionStorage.removeItem('snapshotDate');\n    subscribe();\n  };\n  const subscribe = async () => {\n    const unsubscribe = getGuilds(handleGuildsUpdate);\n    setListener({\n      func: unsubscribe\n    });\n  };\n  useEffect(() => {\n    const timePassed = getDuration(new Date(), snapshotDate);\n    if (timePassed?.days > 0 || timePassed?.hours > 0 || timePassed?.minutes >= 15 || !snapshotDate) {\n      setTimeout(() => subscribe(), 3000);\n    } else {\n      setGuilds(tryToParse(sessionStorage.getItem('guildsLeaderboard')));\n    }\n    return () => {\n      listener && typeof listener?.func === 'function' && listener?.func();\n    };\n  }, []);\n  return <>\n    <NextSeo title=\"Guilds | Idleon Toolbox\" description=\"Top guilds in idleon\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"guilds.jsx\" />\n    <Typography variant={'h2'} data-sentry-element=\"Typography\" data-sentry-source-file=\"guilds.jsx\">Guilds Leaderboard</Typography>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"guilds.jsx\">\n      <Stack gap={2} direction=\"row\" data-sentry-element=\"Stack\" data-sentry-source-file=\"guilds.jsx\">Last Updated: {!guilds ? <CircularProgress size={'22px'} disableShrink /> : isValid(snapshotDate) ? format(snapshotDate, 'dd/MM/yyyy HH:mm:ss') : null}</Stack>\n      <Tooltip title={'Reload guild data'} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"guilds.jsx\">\n        <span><IconButton disabled={!guilds} onClick={handleRefresh} data-sentry-element=\"IconButton\" data-sentry-source-file=\"guilds.jsx\"><RefreshIcon data-sentry-element=\"RefreshIcon\" data-sentry-source-file=\"guilds.jsx\" /></IconButton></span>\n      </Tooltip>\n    </Stack>\n    <Typography variant={'caption'} component={'div'} sx={{\n      mb: 2\n    }} data-sentry-element=\"Typography\" data-sentry-source-file=\"guilds.jsx\">* Updates every 15 minutes</Typography>\n    <TableContainer component={Paper} data-sentry-element=\"TableContainer\" data-sentry-source-file=\"guilds.jsx\">\n      <Table size=\"small\" data-sentry-element=\"Table\" data-sentry-source-file=\"guilds.jsx\">\n        <TableHead data-sentry-element=\"TableHead\" data-sentry-source-file=\"guilds.jsx\">\n          <TableRow data-sentry-element=\"TableRow\" data-sentry-source-file=\"guilds.jsx\">\n            <TableCell sx={{\n              width: '1px'\n            }} data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\"></TableCell>\n            <TableCell sx={{\n              width: 30\n            }} data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\"></TableCell>\n            <TableCell data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\">Guild Name</TableCell>\n            <TableCell data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\">Guild Points</TableCell>\n            <TableCell data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\">Guild Leader</TableCell>\n            <TableCell data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\">Guild Level</TableCell>\n            <TableCell data-sentry-element=\"TableCell\" data-sentry-source-file=\"guilds.jsx\">Members Count</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody data-sentry-element=\"TableBody\" data-sentry-source-file=\"guilds.jsx\">\n          {!guilds && !error ? <TableRow>\n            <TableCell colSpan={7} align={'center'}>\n              <Stack alignItems={'center'} gap={2}>\n                <Typography>Gathering guild info</Typography>\n                <LinearProgress sx={{\n                  width: 300\n                }} />\n              </Stack>\n            </TableCell>\n          </TableRow> : null}\n          {error ? <TableRow>\n            <TableCell colSpan={7} align={'center'}>\n              <Stack sx={{\n                my: 3\n              }} direction={'row'} alignItems={'center'} justifyContent={'center'} gap={2}>\n                <ErrorIcon />\n                <Typography variant={'h6'}>{error}</Typography>\n              </Stack>\n            </TableCell>\n          </TableRow> : null}\n          {guilds?.map(({\n            totalGp,\n            leader,\n            membersCount,\n            guildIcon,\n            guildName,\n            topContributors\n          }, index) => {\n            const guildLevel = getGuildLevel(totalGp);\n            const maxMembers = 30 + 4 * guildLevel;\n            return <React.Fragment key={'row' + index}>\n              <TableRow sx={{\n                '& > *': {\n                  borderBottom: 'unset'\n                }\n              }}>\n                <TableCell sx={{\n                  p: '4px'\n                }}>\n                  <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpenIndex(openIndex === index ? null : index)}>\n                    {openIndex === index ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                  </IconButton>\n                </TableCell>\n                <TableCell sx={{\n                  p: 1,\n                  textAlign: 'center'\n                }}>\n                  {index + 1}\n                </TableCell>\n\n\n                <TableCell>\n                  <Stack direction={'row'} alignItems={'center'} gap={1}>\n                    <img src={`${prefix}data/G2icon${guildIcon}.png`} style={{\n                      width: 24\n                    }} alt={'guild-icon'} />\n                    <Typography>{guildName}</Typography>\n                  </Stack>\n                </TableCell>\n                <TableCell>{numberWithCommas(totalGp)}</TableCell>\n                <TableCell>{leader?.a}</TableCell>\n                <TableCell>{guildLevel}</TableCell>\n                <TableCell>{membersCount} / {maxMembers}</TableCell>\n              </TableRow>\n              <TableRow sx={{\n                '& > *': {\n                  borderBottom: 'unset'\n                }\n              }}>\n                <TableCell style={{\n                  paddingBottom: 0,\n                  paddingTop: 0\n                }} colSpan={7}>\n                  <Collapse in={openIndex === index} timeout=\"auto\" unmountOnExit>\n                    <Box sx={{\n                      p: 1\n                    }}>\n                      <Typography variant={'h6'} sx={{\n                        mb: 1\n                      }}>Top Contributors</Typography>\n                      <Table size=\"small\" sx={{\n                        width: 300\n                      }}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Gp</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {topContributors?.map(({\n                            name,\n                            gpEarned\n                          }) => {\n                            return <TableRow key={`top-3-${name}`}>\n                              <TableCell>{name}</TableCell>\n                              <TableCell>{numberWithCommas(gpEarned)}</TableCell>\n                            </TableRow>;\n                          })}\n                        </TableBody>\n                      </Table>\n                    </Box>\n                  </Collapse>\n                </TableCell>\n              </TableRow>\n            </React.Fragment>;\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  </>;\n};\nexport default Guilds;"],"names":["_interopRequireDefault","__webpack_require__","exports","Z","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","window","__NEXT_P","push","__webpack_exports__","listener","setListener","useState","func","guilds","setGuilds","openIndex","setOpenIndex","snapshotDate","tryToParse","sessionStorage","getItem","error","setError","parseGuildsData","useCallback","topGuilds","slice","map","guild","leader","members","find","g","param","topContributors","sort","a","b","e","name","gpEarned","guildIcon","guildName","totalGp","membersCount","length","handleGuildsUpdate","parsedGuilds","setItem","JSON","stringify","Date","getTime","subscribe","unsubscribe","getGuilds","useEffect","timePassed","getDuration","days","hours","minutes","setTimeout","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","NextSeo","title","description","data-sentry-element","data-sentry-source-file","Typography","variant","Stack","direction","alignItems","gap","isValid","format","CircularProgress","size","disableShrink","Tooltip","span","IconButton","disabled","onClick","removeItem","RefreshIcon","component","sx","mb","TableContainer","Paper","Table","TableHead","TableRow","TableCell","width","TableBody","colSpan","align","LinearProgress","my","justifyContent","ErrorIcon","index","guildLevel","getGuildLevel","React","borderBottom","p","aria-label","KeyboardArrowUpIcon","KeyboardArrowDownIcon","textAlign","img","src","prefix","concat","style","alt","numberWithCommas","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","Box"],"sourceRoot":""}