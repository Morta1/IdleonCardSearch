{"version":3,"file":"static/chunks/pages/account/misc/apocalypses-4e235bd603787ba5.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/FormatAlignCenter.js","webpack://_N_E/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://_N_E/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://_N_E/./node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","webpack://_N_E/./node_modules/@mui/material/ToggleButton/ToggleButton.js","webpack://_N_E/./node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","webpack://_N_E/./node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","webpack://_N_E/./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","webpack://_N_E/?4156","webpack://_N_E/./pages/account/misc/apocalypses.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"\n}), 'FormatAlignCenter');\n\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label, required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n  return value === candidate;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      exclusive = false,\n      fullWidth = false,\n      onChange,\n      orientation = 'horizontal',\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  };\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/misc/apocalypses\",\n      function () {\n        return require(\"private-next-pages/account/misc/apocalypses.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/misc/apocalypses\"])\n      });\n    }\n  ","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '@components/common/context/AppProvider';\nimport { talentPagesMap } from '@parsers/talents';\nimport { Card, CardContent, Checkbox, Divider, FormControlLabel, Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { cleanUnderscore, notateNumber, numberWithCommas, prefix, tryToParse } from '@utility/helpers';\nimport styled from '@emotion/styled';\nimport { NextSeo } from 'next-seo';\nimport Tooltip from '../../../components/Tooltip';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nconst Apocalypses = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const [filteredCharacters, setFilteredCharacters] = useState([0]);\n  const handleFilteredCharacters = (event, newCharacters) => {\n    newCharacters?.length > 0 && setFilteredCharacters(newCharacters);\n    localStorage.setItem('apocalypseCharacters', JSON.stringify(newCharacters));\n  };\n  const handleSelectAll = () => {\n    const allSelected = filteredCharacters?.length === state?.characters?.length;\n    const chars = Array.from(Array(allSelected ? 1 : state?.characters?.length).keys());\n    setFilteredCharacters(chars);\n  };\n  useEffect(() => {\n    const chars = tryToParse(localStorage.getItem('apocalypseCharacters'));\n    if (chars) {\n      setFilteredCharacters(tryToParse(localStorage.getItem('apocalypseCharacters')));\n    } else {\n      if (state?.characters) {\n        const localManiacs = state?.characters?.filter(character => {\n          const isBarbarian = talentPagesMap[character?.class]?.includes('Barbarian');\n          const isBloodBerserker = talentPagesMap[character?.class]?.includes('Blood_Berserker');\n          return isBarbarian || isBloodBerserker;\n        });\n        setFilteredCharacters(localManiacs?.map(({\n          playerId\n        }) => playerId));\n      }\n    }\n  }, []);\n  return <>\n      <NextSeo title=\"Apocalypses | Idleon Toolbox\" description=\"Dedicated to the barbarian/blood berserker class to keep track of Zow and Chow talents\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"apocalypses.jsx\" />\n      <Stack direction={'row'} my={2} justifyContent={'center'} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"apocalypses.jsx\">\n        <ToggleButtonGroup size={'small'} sx={{\n        display: 'flex',\n        flexWrap: 'wrap'\n      }} value={filteredCharacters} onChange={handleFilteredCharacters} data-sentry-element=\"ToggleButtonGroup\" data-sentry-source-file=\"apocalypses.jsx\">\n          {state?.characters?.map((character, index) => {\n          return <ToggleButton title={character?.name} value={index} key={character?.name + '' + index}>\n                <img src={`${prefix}data/ClassIcons${character?.classIndex}.png`} alt=\"\" />\n              </ToggleButton>;\n        })}\n        </ToggleButtonGroup>\n        <ToggleButtonGroup sx={{\n        display: 'flex',\n        flexWrap: 'wrap'\n      }} size={'small'} data-sentry-element=\"ToggleButtonGroup\" data-sentry-source-file=\"apocalypses.jsx\">\n          <ToggleButton onClick={handleSelectAll} title=\"Select all\" value={'all'} data-sentry-element=\"ToggleButton\" data-sentry-source-file=\"apocalypses.jsx\">\n            <FormatAlignCenterIcon data-sentry-element=\"FormatAlignCenterIcon\" data-sentry-source-file=\"apocalypses.jsx\" />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Stack>\n      <Typography mb={3} component={'div'} variant={'caption'} data-sentry-element=\"Typography\" data-sentry-source-file=\"apocalypses.jsx\">* Listed monsters are the ones you haven't\n        zowed/chowed and how many you've already killed</Typography>\n      <Stack gap={4} data-sentry-element=\"Stack\" data-sentry-source-file=\"apocalypses.jsx\">\n        {filteredCharacters.length === 0 ? <Typography variant={'h3'} sx={{\n        textAlign: 'center'\n      }}>Please select at\n          least one character</Typography> : null}\n        {state?.characters?.map(({\n        name,\n        zow,\n        chow,\n        playerId\n      }, index) => {\n        if (filteredCharacters?.indexOf(playerId) === -1) return null;\n        return <Stack key={`${name}-zow-chow`} gap={4}>\n            <ApocDisplay apocName={'zow'} charName={name} key={`${name}-zow`} monsters={zow} />\n            <ApocDisplay apocName={'chow'} charName={name} key={`${name}-chow`} monsters={chow} />\n            {index < filteredCharacters.length - 1 ? <Divider my={5} /> : null}\n          </Stack>;\n      })}\n      </Stack>\n    </>;\n};\nconst ApocDisplay = ({\n  apocName,\n  charName,\n  monsters\n}) => {\n  const [onlySuperChows, setOnlySuperChows] = useState(false);\n  const allDone = monsters?.list?.every(({\n    done\n  }) => done.every(done => done));\n  return <Stack gap={2} data-sentry-element=\"Stack\" data-sentry-component=\"ApocDisplay\" data-sentry-source-file=\"apocalypses.jsx\">\n    <Typography variant={'h4'} data-sentry-element=\"Typography\" data-sentry-source-file=\"apocalypses.jsx\">{charName} {apocName}ed {apocName === 'zow' ? monsters.finished.at(0) : monsters?.finished?.join('/') ?? 0} monsters</Typography>\n    {apocName === 'chow' ? <Typography component={'div'} variant={'caption'}>* Normal Chow requires 1M kills / Super Chow requires 100M\n        kills</Typography> : null}\n    {apocName === 'chow' ? <FormControlLabel control={<Checkbox checked={onlySuperChows} onChange={() => setOnlySuperChows(!onlySuperChows)} />} name={'onlySuperChows'} label=\"Hide super chow\" /> : null}\n    <Card data-sentry-element=\"Card\" data-sentry-source-file=\"apocalypses.jsx\">\n      <CardContent data-sentry-element=\"CardContent\" data-sentry-source-file=\"apocalypses.jsx\">\n        {allDone ? <Typography>You're Done</Typography> : monsters ? <Stack gap={3} direction={'row'} flexWrap={'wrap'}>\n          {monsters?.list?.map(({\n            mapName,\n            name,\n            monsterFace,\n            kills,\n            done,\n            thresholds\n          }, index) => {\n            if (onlySuperChows && kills > 1e6) return;\n            return !done.every(done => done) ? <Tooltip title={`${cleanUnderscore(mapName)} - ${numberWithCommas(kills)}`} key={`${charName}-${name}-${index}`}>\n                <Card sx={{\n                width: 120\n              }} variant={'outlined'}>\n                  <CardContent>\n                    <Stack alignItems={'center'} gap={1}>\n                      <MonsterIcon src={`${prefix}data/Mface${monsterFace}.png`} alt=\"\" />\n                      <Typography>{notateNumber(kills, 'Big')}</Typography>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Tooltip> : null;\n          })}\n        </Stack> : <Typography>{apocName} talent is still locked !</Typography>}\n      </CardContent>\n    </Card>\n  </Stack>;\n};\nconst MonsterIcon = styled.img`\n  width: 35px;\n  height: 41px;\n`;\nexport default Apocalypses;"],"names":["_interopRequireDefault","__webpack_require__","exports","Z","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getFormControlLabelUtilityClasses","slot","generateUtilityClass","formControlLabelClasses","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","disabled","labelPlacement","error","required","slots","root","capitalize","label","asterisk","composeClasses","FormControlLabelRoot","styled","ZP","name","overridesResolver","props","styles","FormControlLabel_formControlLabelClasses","theme","esm_extends","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","vars","palette","text","AsteriskComponent","main","FormControlLabel","react","forwardRef","inProps","ref","_ref","_slotProps$typography","useThemeProps","className","componentsProps","control","disabledProp","disableTypography","labelProp","requiredProp","slotProps","other","objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","typographySlotProps","typography","type","Typography","jsx_runtime","component","clsx_m","children","jsxs","cloneElement","FormControlLabel_FormControlLabel","getToggleButtonUtilityClass","toggleButtonClasses","fullWidth","selected","size","ToggleButtonRoot","ButtonBase","selectedColorChannel","selectedColor","primary","primaryChannel","mainChannel","button","borderRadius","shape","padding","border","divider","action","active","width","ToggleButton_toggleButtonClasses","disabledBackground","textDecoration","backgroundColor","hoverOpacity","colorManipulator","Fq","selectedOpacity","fontSize","pxToRem","ToggleButton","disableFocusRipple","onChange","onClick","value","focusRipple","event","defaultPrevented","ToggleButton_ToggleButton","isValueSelected","candidate","undefined","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","toggleButtonGroupClasses","orientation","grouped","ToggleButtonGroupRoot","ToggleButtonGroup_toggleButtonGroupClasses","vertical","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","ToggleButtonGroup","exclusive","handleChange","buttonValue","newValue","index","slice","splice","concat","handleExclusiveChange","role","Children","map","child","isValidElement","ToggleButtonGroup_ToggleButtonGroup","window","__NEXT_P","push","ApocDisplay","monsters","apocName","charName","param","onlySuperChows","setOnlySuperChows","useState","allDone","list","every","done","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Stack","gap","data-sentry-element","data-sentry-component","data-sentry-source-file","variant","finished","at","join","Checkbox","checked","Card","CardContent","direction","flexWrap","mapName","monsterFace","kills","thresholds","Tooltip","title","numberWithCommas","cleanUnderscore","sx","MonsterIcon","src","prefix","alt","notateNumber","img","_templateObject","__webpack_exports__","state","useContext","AppContext","filteredCharacters","setFilteredCharacters","useEffect","chars","tryToParse","localStorage","getItem","characters","localManiacs","filter","character","talentPagesMap","isBarbarian","class","includes","isBloodBerserker","playerId","Fragment","NextSeo","description","my","justifyContent","newCharacters","length","setItem","JSON","stringify","classIndex","allSelected","from","keys","FormatAlignCenterIcon","mb","textAlign","zow","chow","Divider"],"sourceRoot":""}