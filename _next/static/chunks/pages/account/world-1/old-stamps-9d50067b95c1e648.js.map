{"version":3,"file":"static/chunks/pages/account/world-1/old-stamps-9d50067b95c1e648.js","mappings":"4aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,8BACA,WACA,OAAeC,EAAQ,MACvB,EACA,oQCmBA,IAAMC,EAAWC,EAAAA,CAAMA,CAACC,GAAG,CAAAC,kBAK3BC,CAAAA,EAAAC,CAAA,CA3BoB,OAAC,CACnBC,QAAAA,EAAU,UAAU,CACpBC,SAAAA,EAAW,EAAI,CACfC,MAAAA,EAAQ,CAAC,CAAC,CACVC,MAAAA,CAAK,CACLC,MAAAA,EAAQ,aAAa,CACrBC,SAAAA,EAAW,CAAC,CACb,CAAAC,EACC,MAAO,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIP,MAAOA,EAAOQ,wBAAsB,cAAcC,0BAAwB,4BACnFP,EAAQ,GAAAG,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACX,MAAO,CAC1BY,UAAWb,EAAW,SAAW,MACnC,WAAIG,IAAsB,KAC1B,GAAAG,EAAAK,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACC,SAAU,OAAQC,eAAgBhB,EAAW,SAAW,aAAciB,UAAW,MAAOC,IAAKnB,aAAAA,EAAyB,IAAM,EAAGoB,sBAAoB,QAAQT,0BAAwB,2BACvLR,MAAAA,EAAAA,KAAAA,EAAAA,EAAOkB,GAAG,CAAC,CAAAf,EAAoBgB,QAAnB,CAACC,EAAWC,EAAK,CAAAlB,EAC5B,OAAOgB,EAAQjB,GAAYoB,OAAOD,IAAS,EAAI,GAAAjB,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAWlB,aAAAA,EAAyB,SAAW,MAAOmB,IAAKnB,aAAAA,EAAyB,EAAI,GAAIiB,eAAgB,SAAUS,WAAY,mBACpL,GAAAnB,EAAAK,GAAA,EAAClB,EAAAA,CAASiC,IAAK,GAAsBJ,MAAAA,CAAnBK,EAAAA,MAAMA,CAAC,cAAsBC,MAAA,CAAVN,EAAU,QAAOO,IAAI,KAC1D,GAAAvB,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACb,QAAS,QAAS+B,UAAW,OAAQC,UAAW,sBAAeP,OAAOD,OAFiHA,EAAO,GAAKD,GAGtM,IACf,OAGN,iICgDAzB,CAAAA,EAAAC,CAAA,CAnEe,QAwDPkC,KAxDQ,CACdC,KAAAA,CAAI,CACJD,WAAAA,CAAU,CACVE,MAAAA,CAAK,CACLC,SAAAA,CAAQ,CACRC,YAAAA,CAAW,CACXC,YAAAA,CAAW,CACXC,YAAAA,EAAc,YAAY,CAC1BC,UAAAA,CAAS,CACTC,SAAAA,EAAW,GAAG,CACdC,cAAAA,EAAgB,EAAE,CACnB,CAAApC,EACOqC,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAAcC,GAASA,EAAMC,WAAW,CAACC,IAAI,CAAC,MAAO,CAChEC,MAAO,EACT,GACMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACTC,EAAaF,EAAOG,KAAK,CAACX,EAAS,CACnCY,EAAiBnB,EAAKoB,SAAS,CAACC,GAAOA,IAAQJ,GAC/CK,EAAcH,GAAkB,EAAIA,EAAiB,EAC3DI,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KAEHN,GACHF,EAAOS,OAAO,CAAC,CACbC,SAAUV,EAAOU,QAAQ,CACzBP,MAAO,CACL,GAAGH,EAAOG,KAAK,CACf,CAACX,EAAS,CAAEP,CAAI,CAACsB,EAAY,CAEjC,EAAGI,KAAAA,EAAW,CACZC,QAAS,EACX,EAEJ,EAAG,CAACV,EAAYV,EAAUP,EAAMsB,EAAaP,EAAO,EAgBpD,IAAMa,EAAQC,MAAMC,OAAO,CAAC5B,GAAYA,EAAW,CAACA,EAAS,CAC7D,MAAO,GAAA6B,EAAAzD,IAAA,EAAC0D,EAAAA,CAAGA,CAAAA,CAACC,GAAI5B,aAAAA,EAA6B,CAC3C6B,SAAU,EACVC,QAAS,MACX,EAAI,CAAC,EAAGjD,sBAAoB,MAAMV,wBAAsB,SAASC,0BAAwB,uBACvF,GAAAsD,EAAArD,GAAA,EAAC0D,EAAAA,CAAIA,CAAAA,CAACrE,SAAU,CAAC0C,GAAQA,GAAQT,EAAKqC,MAAM,CAAG,EAAGC,cAAa,GAACC,yBAAwB,GAACN,GAAI,CAC3FO,aAAc,CAChB,EAAG1E,QAAS2C,GAAQT,EAAKqC,MAAM,EAAI,GAAKjC,EAAc,aAAe,WAAYqC,MAAOnB,EAAaoB,SAtBjF,CAACC,EAAGC,KACxB,IAAMC,EAAW,CACf,GAAG9B,EAAOG,KAAK,CACf,CAACX,EAAS,CAAEP,CAAI,CAAC4C,EAAS,EAG5BpC,EAAcsC,OAAO,CAACC,GAAO,OAAOF,CAAQ,CAACE,EAAI,EACjDhC,EAAOzD,IAAI,CAAC,CACVmE,SAAUV,EAAOU,QAAQ,CACzBP,MAAO2B,CACT,EAAGnB,KAAAA,EAAW,CACZC,QAAS,EACX,GACAxB,GAAeA,EAAYyC,EAC7B,EAQgI1D,sBAAoB,OAAOT,0BAAwB,sBAC/JuB,OAAdD,CAAAA,EAAAA,MAAAA,EAAAA,EAAcC,CAAAA,GAAdD,KAAAA,IAAAA,EAAAA,KAAAA,EAADiD,EAAsB7D,GAAG,CAAC,CAACkC,EAAKjC,IACxB,GAAA2C,EAAArD,GAAA,EAACuE,EAAAA,CAAGA,CAAAA,CAACC,aAAa,QAAQC,KAAMlD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAO,CAACb,EAAM,EAAG,GAAA2C,EAAArD,GAAA,EAAChB,MAAAA,CAAI+B,IAAK,GAAAE,MAAA,CAAGD,EAAAA,MAAMA,EAAkBC,MAAA,CAAfM,MAAAA,EAAAA,KAAAA,EAAAA,CAAO,CAACb,EAAM,CAAC,UAAY,KAAMgE,QAAO,GAACC,MAAO/C,EAAY,GAAKe,EAAKY,GAAI,CACtJqB,SAAU,EACZ,GAAQ,GAAUlE,MAAAA,CAAPiC,EAAI,KAAS1B,MAAA,CAANP,OAGrBe,EAAcD,EAAW0B,MAAAA,EAAAA,KAAAA,EAAAA,EAAOzC,GAAG,CAAC,CAACoE,EAAOnE,IACpCA,IAAUkC,EAAciC,EAAQ,QAG7C,2sCCjEO,IAAMC,EAAeC,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,CAACC,EAAOC,KAC7C,GAAM,CACJC,KAAAA,CAAI,CACJT,KAAAA,CAAI,CACJzF,IAAAA,CAAG,CACHQ,MAAAA,EAAQ,EAAE,CACV,GAAG2F,EACJ,CAAGH,EACJ,MAAO,GAAArF,EAAAK,GAAA,EAACoF,EAAAA,CAAOA,CAAAA,CAAC5F,MAAOA,WACrB,GAAAG,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACW,WAAY,SAAW,GAAGqE,CAAI,CAAEF,IAAKA,EAAK3F,MAAO,CACtD+F,SAAU,WACVC,MAAO,aACT,YACE,GAAA3F,EAAAK,GAAA,EAAChB,MAAAA,CAAK,GAAGA,CAAG,CAAE+B,IAAK,GAAiB0D,MAAAA,CAAdzD,EAAAA,MAAMA,CAAC,SAAYC,MAAA,CAALwD,EAAK,QAAOvD,IAAI,KACpD,GAAAvB,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACb,QAAS,QAAS+B,UAAW,gBAAS+D,QAGxD,EACAJ,CAAAA,EAAaS,WAAW,CAAG,eACpB,IAAMC,cAAgB,OAAC,CAC5BhG,MAAAA,CAAK,CACLuE,MAAAA,CAAK,CACL0B,UAAAA,CAAS,CACTC,WAAAA,EAAa,CAAC,CAAC,CACfC,WAAAA,EAAa,CAAC,CAAC,CAChB,CAAAjG,EACC,MAAO,GAAAC,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOF,SAAU,OAAQU,WAAY,SAAUN,sBAAoB,QAAQV,wBAAsB,gBAAgBC,0BAAwB,uBAC/JP,EAAQ,GAAAG,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACsD,GAAImC,EAAYE,WAAYH,EAAY,OAAS,IAAKtE,UAAW,iBAAS3B,EAAM,WAAuB,KAC5H,GAAAG,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAAC4F,SAAU,GAAI1E,UAAW,OAAQoC,GAAIoC,EAAYnF,sBAAoB,aAAaT,0BAAwB,sBAAcgE,MAExI,EACa+B,EAAc/G,CAAAA,EAAAA,EAAAA,CAAAA,EAAOgH,EAAAA,CAAKA,EAAAA,mBAM1BC,cAAgBC,IAC3B,GAAM,CACJC,SAAAA,CAAQ,CACRC,MAAAA,CAAK,CACLC,UAAAA,CAAS,CACTC,KAAAA,CAAI,CACJjH,QAAAA,CAAO,CACPkH,QAAAA,CAAO,CACPC,OAAAA,CAAM,CACNC,aAAAA,CAAY,CACb,CAAGP,EACEQ,EAAUrH,YAAAA,EAAwB,GAAiBkH,MAAAA,CAAdtF,EAAAA,MAAMA,CAAC,SAAeC,MAAA,CAARqF,EAAQ,QAAQ,GAAuBF,MAAAA,CAApBpF,EAAAA,MAAMA,CAAC,eAAuBC,MAAA,CAAVmF,EAAU,QAE1G,MAAO,GAAAzG,EAAAC,IAAA,EAAAD,EAAA+G,QAAA,YACJP,EAAQ,EAAI,GAAAxG,EAAAK,GAAA,EAAC2G,EAAAA,CAAW5F,IAAK,GAAgCoF,MAAAA,CAA7BnF,EAAAA,MAAMA,CAAC,wBAA4BC,MAAA,CAANkF,EAAM,QAAOjF,IAAI,KAAQ,KACvF,GAAAvB,EAAAK,GAAA,EAACoF,EAAAA,CAAOA,CAAAA,CAAC5F,MAAO,GAAAG,EAAAK,GAAA,EAAC4G,YAAAA,CACf,GAAGX,CAAS,CACZC,SALiB9G,YAAAA,EAAwBiH,EAAOH,EAMhDM,aAAAA,EACAD,OAAAA,IACK/F,sBAAoB,UAAUT,0BAAwB,sBAC3D,GAAAJ,EAAAK,GAAA,EAAC6G,EAAAA,CAASC,UAAW1H,YAAAA,EAAuBmH,OAAQA,EAAQxF,IAAK0F,EAASvF,IAAI,GAAGV,sBAAoB,WAAWT,0BAAwB,mBAG9I,EACM6G,YAAc,OAAC,CACnBrB,YAAAA,CAAW,CACXwB,OAAAA,CAAM,CACNC,MAAAA,CAAK,CACLb,MAAAA,CAAK,CACLc,SAAAA,CAAQ,CACRT,aAAAA,CAAY,CACZD,OAAAA,CAAM,CACP,CAAA7G,EACKwH,EAAYF,EAOhB,OANIC,GACFC,CAAAA,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,EAAc,CACxBH,MAAAA,EACAb,MAAAA,CACF,IAEK,GAAAxG,EAAAC,IAAA,EAAAD,EAAA+G,QAAA,YACL,GAAA/G,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAAC2F,WAAY,OAAQxG,QAAS,KAAMoB,sBAAoB,aAAaT,0BAAwB,sBAAcqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB7B,KACtI,GAAA5F,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,sBAAcqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBL,EAAOjE,OAAO,CAAC,IAAKoE,MACtHD,EAAW,GAAAtH,EAAAK,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACkH,GAAI,EAAG/G,UAAW,MAAOC,IAAK,EAAGH,SAAU,gBAC3D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,CAACK,GAAG,CAAC,CAAC6G,EAAG5G,IACnB,GAAAf,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAAiCW,WAAY,SAAUT,eAAgB,0BACjFK,IAAAA,EAAc,GAAAf,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,UAAC,SAAoB,GAAAN,EAAAK,GAAA,EAACuH,EAAAA,CAASxG,IAAK,GAAoBL,MAAAA,CAAjBM,EAAAA,MAAMA,CAAC,YAAgBC,MAAA,CAANP,EAAM,QAAOQ,IAAI,KACnG,GAAAvB,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,UAAE+G,EAAStG,CAAAA,EAAQ,OAFb,GAAkBA,MAAAA,CAAf6E,EAAY,KAAStE,MAAA,CAANP,OAK9B,KACV6F,GAAUC,EAAe,GAAA7G,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,WAAC,oBAAkBqH,CAAAA,EAAAA,EAAAA,gBAAAA,EAAiBjB,GAAQ,YAAiBC,EAAe,EAAI,GAAA7G,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,WAAC,aACxGqH,CAAAA,EAAAA,EAAAA,gBAAAA,EAAiBjB,GAAQ,MAAIiB,CAAAA,EAAAA,EAAAA,gBAAAA,EAAiBhB,MAChD,OAEjB,EACMe,EAAWxI,EAAAA,CAAMA,CAACC,GAAG,CAAAyI,oBAIrBZ,EAAW9H,EAAAA,CAAMA,CAACC,GAAG,CAAA0I,mBAId,OAAC,CACZnB,OAAAA,CAAM,CACNO,UAAAA,CAAS,CACV,CAAApH,SAAK,GAAYoH,EAAiB,EAAL,EAAK,GAE7BH,EAAa5H,EAAAA,CAAMA,CAACC,GAAG,CAAA2I,oBAOhBC,cAAgB,OAAC,CAC5BC,MAAAA,CAAK,CACLC,MAAAA,CAAK,CACLC,GAAAA,CAAE,CACFC,GAAAA,CAAE,CACFC,MAAAA,CAAK,CACLC,GAAAA,CAAE,CACFC,GAAAA,CAAE,CACFC,YAAAA,CAAW,CACX/B,KAAAA,CAAI,CACJgC,SAAAA,CAAQ,CACT,CAAA3I,EACO4I,EAAWT,EAAQ,EAAIU,CAAAA,EAAAA,EAAAA,MAAAA,EAAOT,EAAOD,EAAOE,EAAIC,GAAM,EACtDQ,EAAgBX,EAAQ,EAAIU,CAAAA,EAAAA,EAAAA,MAAAA,EAAON,EAAOJ,EAAOK,EAAIC,GAAM,EACjE,MAAO,GAAAxI,EAAAC,IAAA,EAAAD,EAAA+G,QAAA,YACL,GAAA/G,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOQ,WAAY,SAAUP,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,uBACzG,GAAAJ,EAAAK,GAAA,EAAChB,MAAAA,CAAI+B,IAAK,GAA4BsH,MAAAA,CAAzBrH,EAAAA,MAAMA,CAAC,oBAA2BC,MAAA,CAAToH,EAAS,QAAOnH,IAAI,KAC1D,GAAAvB,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAAC2F,WAAY,OAAQxG,QAAS,KAAMoB,sBAAoB,aAAaT,0BAAwB,sBAAcqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBf,QAExI,GAAA1G,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,sBAAcqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBgB,GAAatF,OAAO,CAAC,IAAKwF,GAAUxF,OAAO,CAAC,IAAK0F,OAExJ,EACaC,YAAc,OAAC,CAC1BC,QAAAA,CAAO,CACPC,WAAAA,CAAU,CACX,CAAAjJ,EACC,MAAO,GAAAC,EAAAK,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACI,IAAK,EAAGD,UAAW,MAAOE,sBAAoB,QAAQV,wBAAsB,cAAcC,0BAAwB,sBAC7H2I,EAAQjI,GAAG,CAAC,QAEuCkI,EAIfA,KANvB,CACZjI,MAAAA,CAAK,CACN,CAAAhB,QAAK,GAAAC,EAAAK,GAAA,EAACoF,EAAAA,CAAOA,CAAAA,CAA+B5F,MAAOmJ,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAY,CAACjI,EAAM,GAAnBiI,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBtC,IAAI,UAC3E,GAAA1G,EAAAK,GAAA,EAAChB,MAAAA,CAAIM,MAAO,CACVgG,MAAO,GACPsD,OAAQ,EACV,EAAG7H,IAAK,GAAAE,MAAA,CAAGD,EAAAA,MAAMA,CAAC,mBAAiDC,MAAA,CAAhC0H,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAY,CAACjI,EAAM,GAAnBiI,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBE,UAAU,CAAC,QAAO3H,IAAI,MAJ5DmF,KAAO,SAAW3F,MAO1C,EACaoI,YAAc,OAAC,CAC1BzC,KAAAA,CAAI,CACL,CAAA3G,EACC,MAAO,GAAAC,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACb,QAAS,KAAMoB,sBAAoB,aAAaV,wBAAsB,cAAcC,0BAAwB,uBAAa,oCAAkCsG,IAChL,EACa0C,kBAAoB,OAAC,CAChC3J,QAAAA,CAAO,CACP4J,OAAAA,CAAM,CACNC,OAAAA,CAAM,CACNC,QAAAA,CAAO,CACPC,SAAAA,CAAQ,CACR3J,MAAAA,CAAK,CACLuE,MAAAA,CAAK,CACLvC,SAAAA,CAAQ,CACRiD,KAAAA,CAAI,CACJ2E,aAAAA,CAAY,CACZC,WAAAA,CAAU,CACVC,eAAAA,CAAc,CACf,CAAA5J,EACC,MAAO,GAAAC,EAAAK,GAAA,EAACoF,EAAAA,CAAOA,CAAAA,CAAC5F,MAAO4J,GAAgB,GAAI5I,sBAAoB,UAAUV,wBAAsB,oBAAoBC,0BAAwB,sBACzI,GAAAJ,EAAAK,GAAA,EAACuJ,EAAAA,CAAIA,CAAAA,CAACnK,QAASA,EAAS4J,OAAQA,EAAQzF,GAAI,CAC1CiG,GAAI,CACFC,GAAI,EACJC,GAAI,CACN,EACApE,MAAO,cACP,GAAG2D,CAAM,EACRzI,sBAAoB,OAAOT,0BAAwB,sBACpD,GAAAJ,EAAAK,GAAA,EAAC2J,EAAAA,CAAWA,CAAAA,CAACpG,GAAI,CACf,eAAgB+F,EAAiB,CAC/BM,EAAGN,CACL,EAAI,CAAC,CACP,EAAG9I,sBAAoB,cAAcT,0BAAwB,sBAC3D,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACoD,GAAI,CACTE,QAAS4F,EAAa,OAAS,QAC/B,GAAIA,GAAc,CAAC,CAAC,EACnB7I,sBAAoB,QAAQT,0BAAwB,uBACpDP,EAAQ,GAAAG,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACsD,GAAI,CACvBsC,SAAU,EACZ,EAAGgE,MAAM,iBAAiBC,aAAY,YAAEtK,IAAsB,KAC7DuE,GAASmF,EAAUzE,EAAO,GAAA9E,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOC,IAAK,EAAGO,WAAY,mBACtE,GAAAnB,EAAAK,GAAA,EAAChB,MAAAA,CAAIM,MAAO,CACVyK,UAAW,UACX,GAAGZ,CAAQ,EACVpI,IAAK,GAAY0D,MAAAA,CAATzD,EAAAA,MAAMA,EAAQC,MAAA,CAALwD,GAAQvD,IAAI,KAC/B6C,EAAQ,GAAApE,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,UAAE8D,IAAsB,QACnC,GAAApE,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,UAAE8D,IAAsBvC,UAKxD,EACawI,UAAY,OAAC,CACxBC,UAAAA,CAAS,CACTvE,WAAAA,EAAa,CAAC,CAAC,CACfwE,SAAAA,EAAW,KAAK,CACjB,CAAAxK,EACC,MAAO,GAAAC,EAAAK,GAAA,EAAAL,EAAA+G,QAAA,WACJuD,MAAAA,EAAAA,KAAAA,EAAAA,EAAWxJ,GAAG,CAAC,CAAAf,EAIbgB,QAJc,CACf2F,KAAAA,CAAI,CACJtC,MAAAA,CAAK,CACLvE,MAAAA,CAAK,CACN,CAAAE,SAAYF,EAAQ,GAAAG,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACsD,GAAI,CACnCqC,WAAY,GACd,WAA6BpG,GAArB,GAAWkB,MAAAA,CAAR2F,EAAK,KAASpF,MAAA,CAANP,IAAgC,EAGlB,GAAAf,EAAAK,GAAA,EAACwF,cAAAA,CAAuCE,WAAY,CACnFJ,MAAO,IACP,GAAGI,CAAU,EACZlG,MAAO6G,EAAMtC,MAAO,MAAOA,GAAyCA,EAAhCoG,CAAAA,EAAAA,EAAAA,YAAAA,EAAapG,EAAOmG,IAHN,GAAWxJ,MAAAA,CAAR2F,EAAK,KAASpF,MAAA,CAANP,IAHL,GAAAf,EAAAK,GAAA,EAACoK,EAAAA,CAAOA,CAAAA,CAAC7G,GAAI,CACtEiG,GAAI,EACJa,QAAS,OACX,GAAQ,GAAW3J,MAAAA,CAAR2F,EAAK,KAASpF,MAAA,CAANP,GAG4D,IAEnF,EACa4J,cAAgB,OAAC,CAC5BhK,UAAAA,EAAY,KAAK,CACjBkB,SAAAA,CAAQ,CACT,CAAA9B,EACC,MAAO,GAAAC,EAAAK,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACI,IAAK,EAAGD,UAAWA,EAAWQ,WAAY,SAAUN,sBAAoB,QAAQV,wBAAsB,gBAAgBC,0BAAwB,sBACzJyB,GAEL,ggCCkCA,IAAM+I,KAAO,QAkBqCC,KAlBpC,CACZC,iBAAAA,CAAgB,CAChBC,UAAAA,CAAS,CACTF,cAAAA,CAAa,CACbG,UAAAA,CAAS,CACV,CAAAjL,EACO,CACJ4G,QAAAA,CAAO,CACPsE,aAAAA,CAAY,CACZC,eAAAA,CAAc,CACdC,SAAAA,CAAQ,CACT,CAAGL,EACJ,MAAO,GAAA9K,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACI,IAAK,EAAG8G,GAAIsD,EAAY,EAAI,EAAGnK,sBAAoB,QAAQV,wBAAsB,OAAOC,0BAAwB,2BAC5H,GAAAJ,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,0BAAkBqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBuD,KACtGI,EAAAA,EAAkB,CAACJ,EAAU,CAAG,GAAAhL,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACoH,GAAI,WAAG,mBAA8B,GAAA1H,EAAAC,IAAA,EAAAD,EAAA+G,QAAA,YAChF,GAAA/G,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACI,IAAK,EAAGF,eAAgB,SAAUC,UAAW,MAAOQ,WAAY,mBACrE,GAAAnB,EAAAK,GAAA,EAACgL,EAAAA,CAAUjK,IAAK,GAAUE,MAAA,CAAPD,EAAAA,MAAMA,CAAC,uBAAsBE,IAAI,KACpD,GAAAvB,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,UAAEgL,MAAMP,GAAa,EAAIA,IACpC,GAAA/K,EAAAK,GAAA,EAACkL,EAAAA,CAAWA,CAAAA,CAAC1L,MAAO,sBAAyEyL,MAAAA,CAAnDT,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAeW,SAAS,GAAxBX,KAAAA,IAAAA,EAAAA,EAA4B,SAAS,gBAAsGvJ,MAAA,CAAxFgK,MAAMT,MAAAA,EAAAA,KAAAA,EAAAA,EAAeY,WAAW,EAAI,EAAIjB,CAAAA,EAAAA,EAAAA,YAAAA,EAAaK,MAAAA,EAAAA,KAAAA,EAAAA,EAAeY,WAAW,CAAE,OAAO,cACnL,GAAAzL,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAU,MAAMQ,WAAY,SAAUP,IAAK,YAChD,GAAAZ,EAAAK,GAAA,EAACqL,EAAAA,CAASC,KAAM,CAACV,GAAgB,CAACC,EAAgB9J,IAAK,GAAiBuF,MAAAA,CAAdtF,EAAAA,MAAMA,CAAC,SAAeC,MAAA,CAARqF,EAAQ,QAAOpF,IAAI,KAE1F0J,EAAeT,CAAAA,EAAAA,EAAAA,YAAAA,EAAaS,EAAc,OAAS,aAI1D,GAAAjL,EAAAK,GAAA,EAACuL,EAAAA,CAAWA,CAAAA,CAAC/L,MAAO,GAAID,MAAOiM,CAAAA,EAAAA,EAAAA,aAAAA,EAAcV,UAInD,EACMW,iBAAmB,OAAC,CACxBhB,iBAAAA,CAAgB,CAChBC,UAAAA,CAAS,CACTF,cAAAA,CAAa,CACbG,UAAAA,CAAS,CACV,CAAAjL,EACC,MAAO,GAAAC,EAAAK,GAAA,EAAAL,EAAA+G,QAAA,WACL,GAAA/G,EAAAK,GAAA,EAACuK,KAAAA,CAAKE,iBAAkBA,EAAkBC,UAAWA,EAAWF,cAAeA,EAAeG,UAAWA,EAAWnK,sBAAoB,OAAOT,0BAAwB,oBAE3K,EACM2L,EAAsB3M,EAAAA,CAAMA,CAACc,GAAG,CAAAZ,mBAShC+L,EAAYjM,EAAAA,CAAMA,CAACC,GAAG,CAAAyI,oBAKtBkE,aAAe,OAAC,CACpB9D,MAAAA,CAAK,CACL+D,UAAAA,CAAS,CACTrG,YAAAA,CAAW,CACXwB,OAAAA,CAAM,CACN8E,WAAAA,EAAa,CAAC,CACdnB,UAAAA,CAAS,CACT1D,MAAAA,CAAK,CACN,CAAAtH,EACC,MAAO,GAAAC,EAAAC,IAAA,EAAAD,EAAA+G,QAAA,YACL,GAAA/G,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACb,QAAS,KAAMoB,sBAAoB,aAAaT,0BAAwB,0BAAkBqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB7B,KACtH,GAAA5F,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACsD,GAAI,CACdsG,MAAOhC,EAAQ,GAAKgE,EAAa,EAAI,QAAU,EACjD,EAAGzM,QAAS,QAASoB,sBAAoB,aAAaT,0BAAwB,2BAAiB,IAAEqH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBL,EAAOjE,OAAO,CAAC,MAAOkE,OACtI+D,EAAAA,EAAkB,CAACxF,EAAY,CAAG,GAAA5F,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACoH,GAAI,WAAG,mBAA8B,KACnFQ,IAAU+D,EAAY,GAAAjM,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACoH,GAAI,EAAG9D,GAAI,CAC5CsG,MAAOhC,EAAQ,GAAKgE,EAAa,EAAI,QAAU,EACjD,EAAGzM,QAAS,kBAAS,UACjBgI,CAAAA,EAAAA,EAAAA,eAAAA,EAAgBL,EAAOjE,OAAO,CAAC,MAAO4H,OAA4B,OAE1E,EACMoB,EAAY/M,EAAAA,CAAMA,CAACC,GAAG,CAAA0I,mBACf,OAAC,CACZG,MAAAA,CAAK,CACN,CAAAnI,SAAKmI,IAAAA,EAAc,GAAK,IAEnBwD,EAAWtM,EAAAA,CAAMA,CAACC,GAAG,CAAA2I,mBAGd,OAAC,CACZ2D,KAAAA,CAAI,CACL,CAAA5L,SAAK4L,EAAO,GAAM,GAEnBpM,CAAAA,EAAA,QAnVe,SAK4B6M,EAAyCA,EAAAA,EAC7DA,EAAAA,EAmFwGA,EA2C/FA,EAnI9B,IAAM1J,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CACJyJ,MAAAA,CAAK,CACN,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAUA,EACnBC,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAAoBJ,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBM,IAAI,CAAE,iBAAmBN,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBO,cAAc,GAA9BP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAgC,CAAC,IAAI,CAAG,EACpHQ,EAAeR,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBS,KAAK,GAArBT,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBQ,YAAY,CAClD,CAAC3J,EAAa6J,EAAe,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,GACzC,CAACC,EAAaC,EAAe,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAAC,GAC1C,CAACG,EAAmBC,EAAqB,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAASH,GACrD,CAACQ,EAAmBC,EAAqB,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACrD,CAACO,EAAqBC,EAAuB,CAAGR,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACzD,CAACS,EAAcC,EAAgB,CAAGV,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC3CW,UAAY,SACMC,EAAYvB,EAC3BA,EAAAA,EADP,IAAMwB,EAAAA,OAAgBD,CAAAA,EAAAA,OAAOE,IAAI,CAACzB,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB0B,MAAM,IAAlCH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAqC,CAAC1K,EAAY,CACxE,OAAOmJ,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB0B,MAAM,GAAtB1B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAwB,CAACwB,EAAc,EAE1CE,EAASC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAAML,YAAa,CAACzK,EAAY,EAIjD+K,mBAAqB,CAACjN,EAAOmH,EAAO+F,EAAMC,SAC3BlB,EAKXkB,EAAAA,EALR,IAAMC,EAAY,CAACnB,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAa,CAACjM,EAAM,GAApBiM,KAAAA,IAAAA,EAAAA,EAAwB9E,CAAAA,EAASA,EAC9CkG,EAAWH,SAAAA,EAAkBI,kBAAoBC,sBACvD,GAAIH,GAAa,EAAG,CAClB,IAAMI,EAAOH,EAASlG,EAAOgG,SAC7B,aAAID,EACF,CAAIC,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOM,OAAO,GAAdN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBvH,OAAO,GAAvBuH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAyBO,QAAQ,CAAC,cAC7BC,KAAKC,GAAG,CAAC,EAAGD,KAAKE,KAAK,CAACL,IAEzBG,KAAKE,KAAK,CAACL,GAEbA,CACT,CACA,IAAMhL,EAAQC,MAAM2K,GAAa,GAAGU,IAAI,CAAC,GAAG/N,GAAG,CAAC,CAAC6G,EAAGmH,IAAQA,EAAM,GAC5DC,EAAYxL,EAAMyL,MAAM,CAAC,CAACC,EAAKC,KACnC,GAAIjB,aAAAA,GAAuB,CAAC/F,EAAQgH,CAAAA,EAAYhB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOiB,0BAA0B,GAAK,GAAKlB,SAAAA,EAAiB,CAC1G,IAAMM,EAAOH,EAASlG,EAAQgH,EAAUhB,GACxC,OAAOe,EAAMV,CACf,CACA,OAAOU,CACT,EAAGb,EAASlG,EAAOgG,IACnB,MAAOD,aAAAA,EAAsBS,KAAKE,KAAK,CAACG,GAAaA,CACvD,EACMK,EAAkBC,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,CAACtO,EAAOmH,EAAO+F,EAAMC,IAAUF,mBAAmBjN,EAAOmH,EAAO+F,EAAMC,GAAQ,CAAClB,EAAaE,EAAmBE,EAAkB,EAC/JkC,EAA2BD,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,CAACE,EAAMvG,EAAYyD,IAAY+C,CAAAA,EAAAA,EAAAA,EAAAA,EAA4BD,EAAMvG,EAAYyD,GAAU,CAACL,EAAM,EACrIkC,sBAAwB,CAACpG,EAAAA,SAKckE,EAAAA,EACVA,EAAAA,EAAAA,KANG,CACpC+C,2BAAAA,CAA0B,CAC1BM,YAAAA,CAAW,CACXC,WAAAA,CAAU,CACX,CAAA3P,EACO4P,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsBxD,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgByD,OAAO,GAAvBzD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAyB0D,KAAK,CAAE,4BACrEC,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAc5D,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgByD,OAAO,GAAvBzD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAyB6D,GAAG,GAA5B7D,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA8B8D,MAAM,CAAE,iBAEjEC,EAAkBzB,KAAKC,GAAG,CAAC,GAAK,EAAI,CAACzB,IAAsBN,EAAeM,EAAoBN,CAAAA,EAAgB,KACpH,OAAO6C,EAAerC,CAAAA,EAAoB,IAAO,GAAK+C,EAF/B,GAAK,GAAIJ,EAAa,IAAE,EAE0CrB,KAAK0B,GAAG,CAACV,EAAYhB,KAAK0B,GAAG,CAAC1B,KAAK2B,KAAK,CAACnI,EAAQiH,GAA8B,EAAG,KAAQT,KAAKC,GAAG,CAAC,GAAK,EAAIgB,EAAe,MAAQ,CAC9N,EACMtB,kBAAoB,CAACnG,EAAAA,SAKkBkE,EAAAA,EACpBA,EAAAA,KANS,CAChC+C,2BAAAA,CAA0B,CAC1BmB,aAAAA,CAAY,CACZC,YAAAA,CAAW,CACZ,CAAAxQ,EACO4P,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsBxD,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgByD,OAAO,GAAvBzD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAyB0D,KAAK,CAAE,4BACrEU,EAAiBpE,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBqE,MAAM,GAAtBrE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAAwB,CAAC,EAAE,CAC5CsE,EAAeF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBG,IAAI,EAAGL,EAAgB,GAAIE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBpM,KAAK,EAAG,KAAOkM,EAE/F,OAAO5B,KAAKE,KAAK,CADJ8B,EAAehC,KAAK0B,GAAG,CAACG,EAAcrI,EAASA,CAAAA,EAAQ,EAAIiH,CAAAA,EAA8B,IAAMjH,EAAS,IAAKiH,CAAAA,GAA+BT,KAAKC,GAAG,CAAC,GAAK,EAAIgB,EAAe,KAE5L,EACMiB,GAAmBC,IAAS,CAACvM,EAAGvD,KACpC,GAAM,CACJqD,MAAAA,CAAK,CACN,CAAGE,EAAEwM,MAAM,CACZ7D,EAAe,CACb,GAAGD,CAAW,CACd,CAACjM,EAAM,CAAE,EAAagQ,SAAS3M,GAAb,CACpB,EACF,EAAG,KACH,MAAO,GAAApE,EAAAC,IAAA,EAACC,MAAAA,CAAIC,wBAAsB,SAASC,0BAAwB,2BAC/D,GAAAJ,EAAAK,GAAA,EAAC2Q,EAAAA,EAAOA,CAAAA,CAACnR,MAAM,0BAA0B4I,YAAY,oDAAoD5H,sBAAoB,UAAUT,0BAAwB,mBAC/J,GAAAJ,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACC,UAAW,SAAUiB,UAAW,MAAO/B,QAAS,UAAWoB,sBAAoB,aAAaT,0BAAwB,0BAAiB,4EAGjJ,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOC,IAAK,EAAGF,eAAgB,SAAUD,SAAU,OAAQI,sBAAoB,QAAQT,0BAAwB,2BAC/H,GAAAJ,EAAAK,GAAA,EAAC+I,EAAAA,EAAiBA,CAAAA,CAACvJ,MAAO,eAAgBgB,sBAAoB,oBAAoBT,0BAAwB,0BACxG,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACW,WAAY,SAAUP,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,2BACvF,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACW,WAAY,SAAUR,UAAW,MAAOC,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,2BACzG,GAAAJ,EAAAK,GAAA,EAAChB,MAAAA,CAAI+B,IAAK,GAAUE,MAAA,CAAPD,EAAAA,MAAMA,CAAC,wBAAuBE,IAAI,KAC/C,GAAAvB,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACK,sBAAoB,QAAQT,0BAAwB,2BACzD,GAAAJ,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,2BAAiB,UAAQmM,KAC9F,GAAAvM,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,2BAAiB,WAAS6Q,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB7E,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB0B,MAAM,EAAI,IAAI,aAGjJ,GAAA9N,EAAAK,GAAA,EAAC6Q,EAAAA,CAAgBA,CAAAA,CAACC,QAAS,GAAAnR,EAAAK,GAAA,EAAC+Q,EAAAA,CAAMA,CAAAA,CAACC,QAASjE,EAAmB/I,SAAU,IAAMgJ,EAAqB,CAACD,KAAwBpI,MAAM,eAAenE,sBAAoB,mBAAmBT,0BAAwB,wBAGrN,GAAAJ,EAAAK,GAAA,EAAC+I,EAAAA,EAAiBA,CAAAA,CAACvJ,MAAO,gBAAiBgB,sBAAoB,oBAAoBT,0BAAwB,0BACzG,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACW,WAAY,SAAUR,UAAW,MAAOC,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,2BACzG,GAAAJ,EAAAK,GAAA,EAAChB,MAAAA,CAAI+B,IAAK,GAAUE,MAAA,CAAPD,EAAAA,MAAMA,CAAC,kBAAiB4H,OAAQ,GAAI1H,IAAI,KACpDqL,MAAAA,EAAAA,EAAgB,EAAE,SAGvB,GAAA5M,EAAAK,GAAA,EAAC+I,EAAAA,EAAiBA,CAAAA,CAACvJ,MAAO,UAAWgB,sBAAoB,oBAAoBT,0BAAwB,0BACnG,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACoD,GAAI,CACX0N,GAAI,CACN,EAAG7Q,SAAU,OAAQI,sBAAoB,QAAQT,0BAAwB,2BACrE,GAAAJ,EAAAK,GAAA,EAACkR,EAAAA,CAAIA,CAAAA,CAACC,UAAW,QAAS5N,GAAI,CAC9B6N,OAAQ,SACV,EAAGC,QAAS,IAAMhP,EAAOzD,IAAI,CAAC,CAC5BmE,SAAU,QACZ,GAAIvC,sBAAoB,OAAOT,0BAAwB,0BACnD,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOQ,WAAY,SAAUP,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,2BACzG,GAAAJ,EAAAK,GAAA,EAACsR,EAAAA,CAAiBA,CAAAA,CAAC9Q,sBAAoB,oBAAoBT,0BAAwB,mBACnF,GAAAJ,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,0BAAiB,yBAG1F,GAAAJ,EAAAK,GAAA,EAAC6Q,EAAAA,CAAgBA,CAAAA,CAACC,QAAS,GAAAnR,EAAAK,GAAA,EAACuR,EAAAA,CAAQA,CAAAA,CAAClL,KAAM,OAAQ2K,QAAS7D,EAAcqE,KAAM,QAASxN,SAAU,IAAMoJ,EAAgB,CAACD,KAAmBxI,MAAO,gBAAiBnE,sBAAoB,mBAAmBT,0BAAwB,wBAGxO,GAAAJ,EAAAK,GAAA,EAAC+I,EAAAA,EAAiBA,CAAAA,CAACvI,sBAAoB,oBAAoBT,0BAAwB,0BACjF,GAAAJ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACoD,GAAI,CACX0N,GAAI,CACN,EAAG7Q,SAAU,OAAQI,sBAAoB,QAAQT,0BAAwB,2BACrE,GAAAJ,EAAAK,GAAA,EAAC6Q,EAAAA,CAAgBA,CAAAA,CAACC,QAAS,GAAAnR,EAAAK,GAAA,EAACuR,EAAAA,CAAQA,CAAAA,CAAClL,KAAM,OAAQ2K,QAAS/D,EAAqBjJ,SAAU,IAAMkJ,EAAuB,CAACD,GAAsBuE,KAAM,UAAa7M,MAAO,wBAAyBnE,sBAAoB,mBAAmBT,0BAAwB,mBACjQ,GAAAJ,EAAAK,GAAA,EAACyR,EAAAA,CAASA,CAAAA,CAAC9M,MAAO,gBAAiBZ,MAAO8I,EAAmB7I,SAAUC,GAAK6I,EAAqB7I,EAAEwM,MAAM,CAAC1M,KAAK,EAAG6J,KAAM,SAAU8D,WAAY,CAC9IC,WAAY,CACVC,IAAK,EACLtD,IAAK,EACP,CACF,EAAG9N,sBAAoB,YAAYT,0BAAwB,2BAI/D,GAAAJ,EAAAK,GAAA,EAAC6R,EAAAA,CAAMA,CAAAA,CAACvQ,KAAMgM,OAAOE,IAAI,CAACzB,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB0B,MAAM,EAAGhM,YAlHjCyC,IACpBuI,EAAevI,EACjB,EAgHmF1D,sBAAoB,SAAST,0BAAwB,0BAClI,GAAAJ,EAAAK,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOF,SAAU,OAAQC,eAAgB,SAAUE,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,0BAC9H0N,MAAAA,EAAAA,KAAAA,EAAAA,EAAQhN,GAAG,CAAC,CAACoN,EAAOnN,SAkBuBoR,EAuCAxE,EAAYvB,EAlC3CA,EAAAA,EAgBCA,EAAAA,EAAAA,MAzBVgG,EAAcC,EAAUC,EAAcC,EAb1C,GAAM,CACJ3M,YAAAA,CAAW,CACXe,QAAAA,CAAO,CACPuB,MAAAA,CAAK,CACLsG,QAAAA,CAAO,CACPtC,WAAAA,EAAa,CAAC,CACdsG,KAAAA,CAAI,CACJpK,GAAAA,CAAE,CACFC,GAAAA,CAAE,CACF8G,2BAAAA,CAA0B,CAC3B,CAAGjB,EACEjC,EAAYe,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAa,CAACjM,EAAM,EAAGiM,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAa,CAACjM,EAAM,EAAGmH,EAAQA,EAAQ8E,MAAAA,EAAAA,KAAAA,EAAAA,CAAa,CAACjM,EAAM,CAAGmH,EACjG6C,EAAYnC,CAAAA,EAAAA,EAAAA,MAAAA,EAAO4J,EAAMvG,EAAW7D,EAAIC,EAAI,IAAQ6D,EAEpD,CACJvF,QAAS8L,CAAc,CACxB,CAAGjE,EACEkE,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,EAAmBC,EAAAA,MAAM,CAACT,OAAAA,EAAAA,KAAKA,EAALA,KAAKA,IAALA,EAAAA,KAAKA,CAAAA,KAAAA,EAAAA,OAALA,CAAAA,EAAAA,EAAAA,KAAO,CAACM,EAAe,GAAvBN,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAyBvM,WAAW,CAAC,EAC3EqF,EAAemE,EAAgBrO,EAAOmH,EAAO,WAAYgG,GACzD/C,EAAWiE,EAAgBrO,EAAOmH,EAAO,OAAQgG,GACjDhD,EAAiBe,EAAYkD,GAA+B,EAC9DhE,GACFkH,CAAAA,EAAWjG,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgByG,UAAU,GAA1BzG,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA4B0G,QAAQ,GAAI3H,CAAAA,EAEjDuH,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAW1O,MAAM,EAAG,EACtBoO,EAAeM,MAAAA,EAAAA,KAAAA,EAAAA,EAAWK,KAAK,CAAC,QAMd3G,EAAAA,EAAAA,KANe,CAC/BzF,QAAAA,CAAO,CACPsH,KAAAA,CAAI,CACJ+E,aAAAA,CAAY,CACb,CAAAjT,EACC,GAAIkO,UAAAA,EAAkB,MAAO,GAC7B,IAAIsE,EAAYnG,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB6G,OAAO,GAAvB7G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAyB8G,MAAM,CAAC,OAAC,CAC/CvM,QAASwM,CAAc,CACxB,CAAApT,SAAKoT,IAAmBxM,CAAM,KAFfyF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAEmBxF,MAAM,CAEzC,MAAO2L,CADPA,EAAYjF,EAAsBiF,EAAY,IAAMA,CAAAA,GAChCS,EAAe/H,CACrC,IAEAsH,EAAYnG,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB6G,OAAO,GAAvB7G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAyBgH,IAAI,CAAC,OAAC,CACzCzM,QAASwM,CAAc,CACxB,CAAApT,SAAKoT,IAAmBV,CAAa,KAF1BrG,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAE8BxF,MAAM,CAEhDwL,EAAeG,CADfA,EAAYjF,EAAsBiF,EAAY,IAAMA,CAAAA,GACxBtH,GAE9B,IAAMH,EAAmB,CACvB,GAAG0D,CAAO,CACVkE,UAAAA,EACAzH,aAAAA,EACAE,SAAAA,EACAD,eAAAA,EACAkH,aAAAA,EACAC,SAAAA,CACF,EACIxH,EAAgByE,EAAyB6C,OAAAA,EAAAA,KAAKA,EAALA,KAAKA,IAALA,EAAAA,KAAKA,CAAAA,KAAAA,EAALA,EAAAA,KAAO,CAAC3D,MAAAA,EAAAA,KAAAA,EAAAA,EAAS7H,OAAO,CAAC,CAAEyF,MAAAA,EAAAA,KAAAA,EAAAA,EAAOpD,UAAU,CAAEoD,MAAAA,EAAAA,KAAAA,EAAAA,EAAOK,OAAO,EACzG6F,EAAezH,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAeY,WAAW,GAAIX,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAkBG,YAAY,EAC3E,IAAMoI,EAAUzN,UAAAA,EACVyB,GAAQiM,CAAAA,EAAAA,EAAAA,EAAAA,EAAclH,MAAAA,EAAAA,KAAAA,EAAAA,EAAOK,OAAO,QAAEkB,CAAAA,EAAAA,OAAOE,IAAI,CAACzB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOK,OAAO,GAAdL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgB0B,MAAM,GAAI,CAAC,KAAvCH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,CAA2C,CAAC1K,EAAY,CAAE0D,EAASkE,GAC/G,MAAO,GAAA7K,EAAAK,GAAA,EAACkT,EAAAA,QAAc,WAClB,GAAAvT,EAAAK,GAAA,EAACuJ,EAAAA,CAAIA,CAAAA,CAAChG,GAAI,CACV4P,SAAU,UACV9N,SAAU,WACVC,MAAO6H,EAAe,IAAM,IAC5BiG,OAAQrB,GAAgBC,GAAYC,GAAgBpK,EAAQ,EAAI,oBAAsB,EACxF,WACI,GAAAlI,EAAAC,IAAA,EAAC+J,EAAAA,CAAWA,CAAAA,CAACpG,GAAI,CACjB,eAAgB,CACd8P,cAAe,EACf,GAAIlG,GAAgB,CAClBvD,EAAG,CACL,CAAC,CAEL,YACK/B,EAAQ,EAAI,GAAAlI,EAAAC,IAAA,EAAC8L,EAAAA,WACX,EAMgB,KANA,GAAA/L,EAAAK,GAAA,EAACkL,EAAAA,CAAWA,CAAAA,CAAC1L,MAAO,GAAAG,EAAAC,IAAA,EAAAD,EAAA+G,QAAA,YACnC,GAAA/G,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,WAAC,cAAYmH,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB+G,MAAAA,EAAAA,KAAAA,EAAAA,EAAS9H,IAAI,KACrD,GAAA1G,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,WAAC,YAAUkK,CAAAA,EAAAA,EAAAA,YAAAA,EAAa+H,MAAAA,EAAAA,EAAa,EAAG,OAAO,cAClD/H,CAAAA,EAAAA,EAAAA,YAAAA,EAAakE,KAAKiF,GAAG,CAAC,CAACpB,MAAAA,EAAAA,EAAa,GAAKzH,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAkBG,YAAY,GAAG,OAAO,uBAEzF,GAAAjL,EAAAK,GAAA,EAAChB,MAAAA,CAAIsG,MAAO,GAAIsD,OAAQ,GAAI7H,IAAK,GAAAE,MAAA,CAAGD,EAAAA,MAAMA,CAAC,SAAwBC,MAAA,CAAjBkN,MAAAA,EAAAA,KAAAA,EAAAA,EAAS7H,OAAO,CAAC,QAAOpF,IAAK,OAEhF,EAEgB,KAFJ,GAAAvB,EAAAK,GAAA,EAACkL,EAAAA,CAAWA,CAAAA,CAAC1L,MAAO,4BAC/B,GAAAG,EAAAK,GAAA,EAAChB,MAAAA,CAAIsG,MAAO,GAAIsD,OAAQ,GAAI7H,IAAK,GAAUE,MAAA,CAAPD,EAAAA,MAAMA,CAAC,mBAAkBE,IAAK,OAEnE,EAIgB,KAJA,GAAAvB,EAAAK,GAAA,EAACkL,EAAAA,CAAWA,CAAAA,CAAC1L,MAAO,+BACnC,GAAAG,EAAAK,GAAA,EAAChB,MAAAA,CAAIsG,MAAO,GAAIsD,OAAQ,GAAItJ,MAAO,CACnCyK,UAAW,SACb,EAAGhJ,IAAK,GAAUE,MAAA,CAAPD,EAAAA,MAAMA,CAAC,qBAAoBE,IAAK,UAEpB,KACzB,GAAAvB,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOQ,WAAY,SAAUT,eAAgB,eAAgBE,IAAK,YAClF,GAAAZ,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACW,WAAY,mBACjB,GAAAnB,EAAAK,GAAA,EAACkL,EAAAA,CAAWA,CAAAA,CAACqI,KAAMpG,EAAc3N,MAAO2N,EAAe6F,EAAU,GAAK,GAAArT,EAAAK,GAAA,EAACyL,iBAAAA,CAAiBhB,iBAAkBA,EAAkBE,UAAWpF,EAAamF,UAAWA,EAAWF,cAAeA,IAAoB,GAAA7K,EAAAK,GAAA,EAAC2L,aAAAA,CAC9M,GAAGkC,CAAK,CACRjC,UAAAA,EACAlB,UAAAA,EACA1D,MAAAA,cAEE,GAAArH,EAAAK,GAAA,EAAC8L,EAAAA,CAAUxG,MAAO,GAAIsD,OAAQ,GAAIf,MAAOA,EAAO9G,IAAK,GAAiBuF,MAAAA,CAAdtF,EAAAA,MAAMA,CAAC,SAAeC,MAAA,CAARqF,EAAQ,QAAOpF,IAAI,OAE3F,GAAAvB,EAAAC,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAACb,QAAS,kBAAS,OAAKyI,QAEpC,EAIK,KAJW,GAAAlI,EAAAK,GAAA,EAACyR,EAAAA,CAASA,CAAAA,CAAC7D,KAAM,SAAUrK,GAAI,CAChD+B,MAAO,EACT,EAAGkO,aAAc5H,EAAW5H,SAAUC,GAAKsM,GAAiBtM,EAAGvD,GAAQiE,MAAO,OAAQvF,QAAS,WAAYuS,WAAY,CACrHC,IAAK/J,GAAS,CAChB,OAEC,CAACsF,GAAgB,GAAAxN,EAAAK,GAAA,EAACuK,KAAAA,CAAKE,iBAAkBA,EAAkBC,UAAWA,EAAWF,cAAeA,UAlD7ElE,EAAU,GAAKf,EAAmB7E,EAsDhE,SAIR","sources":["webpack://_N_E/?8ed6","webpack://_N_E/./components/common/CoinDisplay.jsx","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./components/common/styles.jsx","webpack://_N_E/./pages/account/world-1/old-stamps.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-1/old-stamps\",\n      function () {\n        return require(\"private-next-pages/account/world-1/old-stamps.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-1/old-stamps\"])\n      });\n    }\n  ","import { prefix } from 'utility/helpers';\nimport styled from '@emotion/styled';\nimport { Stack, Typography } from '@mui/material';\nconst CoinDisplay = ({\n  variant = 'vertical',\n  centered = true,\n  style = {},\n  money,\n  title = 'Total Money',\n  maxCoins = 5\n}) => {\n  return <div style={style} data-sentry-component=\"CoinDisplay\" data-sentry-source-file=\"CoinDisplay.jsx\">\n    {title ? <Typography style={{\n      textAlign: centered ? 'center' : 'left'\n    }}>{title}</Typography> : null}\n    <Stack flexWrap={'wrap'} justifyContent={centered ? 'center' : 'flex-start'} direction={'row'} gap={variant === 'vertical' ? 2.3 : 1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CoinDisplay.jsx\">\n      {money?.map(([coinIndex, coin], index) => {\n        return index < maxCoins && Number(coin) >= 0 ? <Stack direction={variant === 'vertical' ? 'column' : 'row'} gap={variant === 'vertical' ? 0 : .5} justifyContent={'center'} alignItems={'center'} key={coin + '' + coinIndex}>\n            <CoinIcon src={`${prefix}data/Coins${coinIndex}.png`} alt=\"\" />\n            <Typography variant={'body1'} component={'span'} className={'coin-value'}>{Number(coin)}</Typography>\n          </Stack> : null;\n      })}\n    </Stack>\n  </div>;\n};\nconst CoinIcon = styled.img`\n  width: 23px;\n  height: 27px;\n  object-fit: contain;\n`;\nexport default CoinDisplay;","import React, { useEffect } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  components,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = []\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    // Set the default query parameter if missing\n    if (!queryValue) {\n      router.replace({\n        pathname: router.pathname,\n        query: {\n          ...router.query,\n          [queryKey]: tabs[selectedTab]\n        }\n      }, undefined, {\n        shallow: true\n      });\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router]);\n  const handleOnClick = (e, selected) => {\n    const newQuery = {\n      ...router.query,\n      [queryKey]: tabs[selected]\n    };\n    // Remove specified query parameters\n    clearOnChange.forEach(key => delete newQuery[key]);\n    router.push({\n      pathname: router.pathname,\n      query: newQuery\n    }, undefined, {\n      shallow: true\n    });\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {(components ?? tabs)?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import React, { forwardRef } from 'react';\nimport { cleanUnderscore, growth, notateNumber, numberWithCommas, prefix } from 'utility/helpers';\nimport { Badge, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport Tooltip from '../Tooltip';\nimport { calcCardBonus } from 'parsers/cards';\nexport const IconWithText = forwardRef((props, ref) => {\n  const {\n    stat,\n    icon,\n    img,\n    title = '',\n    ...rest\n  } = props;\n  return <Tooltip title={title}>\n    <Stack alignItems={'center'} {...rest} ref={ref} style={{\n      position: 'relative',\n      width: 'fit-content'\n    }}>\n      <img {...img} src={`${prefix}data/${icon}.png`} alt=\"\" />\n      <Typography variant={'body1'} component={'span'}>{stat}</Typography>\n    </Stack>\n  </Tooltip>;\n});\nIconWithText.displayName = 'IconWithText';\nexport const TitleAndValue = ({\n  title,\n  value,\n  boldTitle,\n  titleStyle = {},\n  valueStyle = {}\n}) => {\n  return <Stack direction={'row'} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"TitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    {title ? <Typography sx={titleStyle} fontWeight={boldTitle ? 'bold' : 500} component={'span'}>{title}:&nbsp;</Typography> : null}\n    <Typography fontSize={15} component={'span'} sx={valueStyle} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{value}</Typography>\n  </Stack>;\n};\nexport const StyledBadge = styled(Badge)`\n  & .MuiBadge-badge {\n    background-color: #d5d5dc;\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\nexport const CardAndBorder = cardProps => {\n  const {\n    cardName,\n    stars,\n    cardIndex,\n    name,\n    variant,\n    rawName,\n    amount,\n    nextLevelReq\n  } = cardProps;\n  const iconSrc = variant === 'cardSet' ? `${prefix}data/${rawName}.png` : `${prefix}data/2Cards${cardIndex}.png`;\n  const realCardName = variant === 'cardSet' ? name : cardName;\n  return <>\n    {stars > 0 ? <BorderIcon src={`${prefix}data/CardEquipBorder${stars}.png`} alt=\"\" /> : null}\n    <Tooltip title={<CardTooltip {...{\n      ...cardProps,\n      cardName: realCardName,\n      nextLevelReq,\n      amount\n    }} />} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"styles.jsx\">\n      <CardIcon isCardSet={variant === 'cardSet'} amount={amount} src={iconSrc} alt=\"\" data-sentry-element=\"CardIcon\" data-sentry-source-file=\"styles.jsx\" />\n    </Tooltip>\n  </>;\n};\nconst CardTooltip = ({\n  displayName,\n  effect,\n  bonus,\n  stars,\n  showInfo,\n  nextLevelReq,\n  amount\n}) => {\n  let realBonus = bonus;\n  if (showInfo) {\n    realBonus = calcCardBonus({\n      bonus,\n      stars\n    });\n  }\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(effect.replace('{', realBonus))}</Typography>\n    {showInfo ? <Stack mt={1} direction={'row'} gap={1} flexWrap={'wrap'}>\n      {[1, 2, 3, 4, 5, 6].map((_, index) => {\n        return <Stack key={`${displayName}-${index}`} alignItems={'center'} justifyContent={'space-between'}>\n          {index === 0 ? <Typography>Base</Typography> : <StarIcon src={`${prefix}etc/Star${index}.png`} alt=\"\" />}\n          <Typography>{bonus * (index + 1)}</Typography>\n        </Stack>;\n      })}\n    </Stack> : null}\n    {amount >= nextLevelReq ? <Stack>You've collected {numberWithCommas(amount)} cards</Stack> : nextLevelReq > 0 ? <Stack>\n        Progress: {numberWithCommas(amount)} / {numberWithCommas(nextLevelReq)}\n      </Stack> : null}\n  </>;\n};\nconst StarIcon = styled.img`\n  height: 20px;\n  object-fit: contain;\n`;\nconst CardIcon = styled.img`\n  width: 56px;\n  height: 72px;\n  object-fit: contain;\n  opacity: ${({\n  amount,\n  isCardSet\n}) => !amount && !isCardSet ? .5 : 1};\n`;\nconst BorderIcon = styled.img`\n  position: absolute;\n  left: 50%;\n  top: -3px;\n  pointer-events: none;\n  transform: translateX(-50%);\n`;\nexport const TalentTooltip = ({\n  level,\n  funcX,\n  x1,\n  x2,\n  funcY,\n  y1,\n  y2,\n  description,\n  name,\n  talentId\n}) => {\n  const mainStat = level > 0 ? growth(funcX, level, x1, x2) : 0;\n  const secondaryStat = level > 0 ? growth(funcY, level, y1, y2) : 0;\n  return <>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n      <img src={`${prefix}data/UISkillIcon${talentId}.png`} alt=\"\" />\n      <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(name)}</Typography>\n    </Stack>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat)}</Typography>\n  </>;\n};\nexport const PlayersList = ({\n  players,\n  characters\n}) => {\n  return <Stack gap={1} direction={'row'} data-sentry-element=\"Stack\" data-sentry-component=\"PlayersList\" data-sentry-source-file=\"styles.jsx\">\n    {players.map(({\n      index\n    }) => <Tooltip key={name + '-head-' + index} title={characters?.[index]?.name}>\n      <img style={{\n        width: 24,\n        height: 24\n      }} src={`${prefix}data/ClassIcons${characters?.[index]?.classIndex}.png`} alt=\"\" />\n    </Tooltip>)}\n  </Stack>;\n};\nexport const MissingData = ({\n  name\n}) => {\n  return <Typography variant={'h3'} data-sentry-element=\"Typography\" data-sentry-component=\"MissingData\" data-sentry-source-file=\"styles.jsx\">Your account is missing data for {name}</Typography>;\n};\nexport const CardTitleAndValue = ({\n  variant,\n  raised,\n  cardSx,\n  imgOnly,\n  imgStyle,\n  title,\n  value,\n  children,\n  icon,\n  tooltipTitle,\n  stackProps,\n  contentPadding\n}) => {\n  return <Tooltip title={tooltipTitle || ''} data-sentry-element=\"Tooltip\" data-sentry-component=\"CardTitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    <Card variant={variant} raised={raised} sx={{\n      my: {\n        xs: 0,\n        md: 3\n      },\n      width: 'fit-content',\n      ...cardSx\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"styles.jsx\">\n      <CardContent sx={{\n        '&:last-child': contentPadding ? {\n          p: contentPadding\n        } : {}\n      }} data-sentry-element=\"CardContent\" data-sentry-source-file=\"styles.jsx\">\n        <Stack sx={{\n          display: stackProps ? 'flex' : 'block',\n          ...(stackProps || {})\n        }} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n          {title ? <Typography sx={{\n            fontSize: 14\n          }} color=\"text.secondary\" gutterBottom>{title}</Typography> : null}\n          {value || imgOnly ? icon ? <Stack direction={'row'} gap={2} alignItems={'center'}>\n            <img style={{\n              objectFit: 'contain',\n              ...imgStyle\n            }} src={`${prefix}${icon}`} alt=\"\" />\n            {value ? <Typography>{value}</Typography> : null}\n          </Stack> : <Typography>{value}</Typography> : children}\n        </Stack>\n      </CardContent>\n    </Card>\n  </Tooltip>;\n};\nexport const Breakdown = ({\n  breakdown,\n  titleStyle = {},\n  notation = 'Big'\n}) => {\n  return <>\n    {breakdown?.map(({\n      name,\n      value,\n      title\n    }, index) => title ? <Typography sx={{\n      fontWeight: 500\n    }} key={`${name}-${index}`}>{title}</Typography> : !name ? <Divider sx={{\n      my: 1,\n      bgcolor: 'black'\n    }} key={`${name}-${index}`} /> : <TitleAndValue key={`${name}-${index}`} titleStyle={{\n      width: 120,\n      ...titleStyle\n    }} title={name} value={!isNaN(value) ? notateNumber(value, notation) : value} />)}\n  </>;\n};\nexport const CenteredStack = ({\n  direction = 'row',\n  children\n}) => {\n  return <Stack gap={1} direction={direction} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CenteredStack\" data-sentry-source-file=\"styles.jsx\">\n    {children}\n  </Stack>;\n};","import { Card, CardContent, Checkbox, FormControlLabel, Stack, Switch, TextField, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { AppContext } from 'components/common/context/AppProvider';\nimport { cleanUnderscore, getCoinsArray, growth, notateNumber, prefix } from '../../../utility/helpers';\nimport styled from '@emotion/styled';\nimport { getSigilBonus, getVialsBonusByEffect } from '../../../parsers/alchemy';\nimport CoinDisplay from 'components/common/CoinDisplay';\nimport HtmlTooltip from 'components/Tooltip';\nimport debounce from 'lodash.debounce';\nimport { NextSeo } from 'next-seo';\nimport { isRiftBonusUnlocked } from '../../../parsers/world-4/rift';\nimport { flattenCraftObject } from '../../../parsers/items';\nimport { crafts, items } from '../../../data/website-data';\nimport { getHighestCapacityCharacter } from '../../../parsers/misc';\nimport Tabber from '../../../components/common/Tabber';\nimport { CardTitleAndValue } from '../../../components/common/styles';\nimport { calcStampLevels, getStampBonus, unobtainableStamps } from '../../../parsers/stamps';\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\nimport Link from '@mui/material/Link';\nimport { useRouter } from 'next/router';\nconst Stamps = () => {\n  const router = useRouter();\n  const {\n    state\n  } = useContext(AppContext);\n  const gildedStamps = isRiftBonusUnlocked(state?.account?.rift, 'Stamp_Mastery') ? state?.account?.accountOptions?.[154] : 0;\n  const stampReducer = state?.account?.atoms?.stampReducer;\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [stampsGoals, setStampsGoals] = useState({});\n  const [stampReducerInput, setStampReducerInput] = useState(stampReducer);\n  const [forcedGildedStamp, setForcedGildedStamp] = useState(false);\n  const [subtractGreenStacks, setSubtractGreenStacks] = useState(false);\n  const [condenseView, setCondenseView] = useState(false);\n  const getStamps = () => {\n    const stampCategory = Object.keys(state?.account?.stamps)?.[selectedTab];\n    return state?.account?.stamps?.[stampCategory];\n  };\n  const stamps = useMemo(() => getStamps(), [selectedTab]);\n  const handleOnClick = selected => {\n    setSelectedTab(selected);\n  };\n  const getAccumulatedCost = (index, level, type, stamp) => {\n    const levelDiff = (stampsGoals?.[index] ?? level) - level;\n    const costFunc = type === 'gold' ? calculateGoldCost : calculateMaterialCost;\n    if (levelDiff <= 0) {\n      const cost = costFunc(level, stamp);\n      if (type === 'material') {\n        if (stamp?.itemReq?.rawName?.includes('Equipment')) {\n          return Math.max(1, Math.floor(cost));\n        }\n        return Math.floor(cost);\n      }\n      return cost;\n    }\n    const array = Array(levelDiff || 0).fill(1).map((_, ind) => ind + 1);\n    const totalCost = array.reduce((res, levelInd) => {\n      if (type === 'material' && (level + levelInd) % stamp?.reqItemMultiplicationLevel === 0 || type === 'gold') {\n        const cost = costFunc(level + levelInd, stamp);\n        return res + cost;\n      }\n      return res;\n    }, costFunc(level, stamp));\n    return type === 'material' ? Math.floor(totalCost) : totalCost;\n  };\n  const accumulatedCost = useCallback((index, level, type, stamp) => getAccumulatedCost(index, level, type, stamp), [stampsGoals, stampReducerInput, forcedGildedStamp]);\n  const getBestCharacterForCraft = useCallback((item, characters, account) => getHighestCapacityCharacter(item, characters, account), [state]);\n  const calculateMaterialCost = (level, {\n    reqItemMultiplicationLevel,\n    baseMatCost,\n    powMatBase\n  }) => {\n    const reductionVal = getVialsBonusByEffect(state?.account?.alchemy?.vials, 'material_cost_for_stamps');\n    const sigilBonus = getSigilBonus(state?.account?.alchemy?.p2w?.sigils, 'ENVELOPE_PILE');\n    const sigilReduction = 1 / (1 + sigilBonus / 100) ?? 1;\n    const stampReducerVal = Math.max(0.1, 1 - (stampReducerInput !== stampReducer ? stampReducerInput : stampReducer) / 100);\n    return baseMatCost * (forcedGildedStamp ? 0.05 : 1) * stampReducerVal * sigilReduction * Math.pow(powMatBase, Math.pow(Math.round(level / reqItemMultiplicationLevel) - 1, 0.8)) * Math.max(0.1, 1 - reductionVal / 100) || 0;\n  };\n  const calculateGoldCost = (level, {\n    reqItemMultiplicationLevel,\n    baseCoinCost,\n    powCoinBase\n  }) => {\n    const reductionVal = getVialsBonusByEffect(state?.account?.alchemy?.vials, 'material_cost_for_stamps');\n    const reductionBribe = state?.account?.bribes?.[0];\n    const realBaseCost = reductionBribe?.done ? baseCoinCost * (1 - reductionBribe?.value / 100) : baseCoinCost;\n    const cost = realBaseCost * Math.pow(powCoinBase - level / (level + 5 * reqItemMultiplicationLevel) * 0.25, level * (10 / reqItemMultiplicationLevel)) * Math.max(0.1, 1 - reductionVal / 100);\n    return Math.floor(cost);\n  };\n  const handleGoalChange = debounce((e, index) => {\n    const {\n      value\n    } = e.target;\n    setStampsGoals({\n      ...stampsGoals,\n      [index]: !value ? 0 : parseInt(value)\n    });\n  }, 100);\n  return <div data-sentry-component=\"Stamps\" data-sentry-source-file=\"old-stamps.jsx\">\n      <NextSeo title=\"Stamps | Idleon Toolbox\" description=\"Keep track of your stamps levels and requirements\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"old-stamps.jsx\" />\n      <Typography textAlign={'center'} component={'div'} variant={'caption'} data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">* Green border means you have enough\n        material, money and space to\n        craft</Typography>\n      <Stack direction={'row'} gap={3} justifyContent={'center'} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n        <CardTitleAndValue title={'Gilded Stamp'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"old-stamps.jsx\">\n          <Stack alignItems={'center'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n            <Stack alignItems={'center'} direction={'row'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n              <img src={`${prefix}data/GildedStamp.png`} alt=\"\" />\n              <Stack data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n                <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">Owned: {gildedStamps}</Typography>\n                <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">Chance: {calcStampLevels(state?.account?.stamps) / 100}%</Typography>\n              </Stack>\n            </Stack>\n            <FormControlLabel control={<Switch checked={forcedGildedStamp} onChange={() => setForcedGildedStamp(!forcedGildedStamp)} />} label=\"Gilded Stamp\" data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"old-stamps.jsx\" />\n          </Stack>\n        </CardTitleAndValue>\n        <CardTitleAndValue title={'Stamp Reducer'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"old-stamps.jsx\">\n          <Stack alignItems={'center'} direction={'row'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n            <img src={`${prefix}data/Atom0.png`} height={36} alt=\"\" />\n            {stampReducer ?? 0}%\n          </Stack>\n        </CardTitleAndValue>\n        <CardTitleAndValue title={'Options'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"old-stamps.jsx\">\n          <Stack sx={{\n          mx: 2\n        }} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n            <Link underline={'hover'} sx={{\n            cursor: 'pointer'\n          }} onClick={() => router.push({\n            pathname: 'stamps'\n          })} data-sentry-element=\"Link\" data-sentry-source-file=\"old-stamps.jsx\">\n              <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n                <ArrowRightAltIcon data-sentry-element=\"ArrowRightAltIcon\" data-sentry-source-file=\"old-stamps.jsx\" />\n                <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">New Stamps Page</Typography>\n              </Stack>\n            </Link>\n            <FormControlLabel control={<Checkbox name={'mini'} checked={condenseView} size={'small'} onChange={() => setCondenseView(!condenseView)} />} label={'Condense view'} data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"old-stamps.jsx\" />\n          </Stack>\n        </CardTitleAndValue>\n        <CardTitleAndValue data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"old-stamps.jsx\">\n          <Stack sx={{\n          mx: 2\n        }} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n            <FormControlLabel control={<Checkbox name={'mini'} checked={subtractGreenStacks} onChange={() => setSubtractGreenStacks(!subtractGreenStacks)} size={'small'} />} label={'Subtract green stacks'} data-sentry-element=\"FormControlLabel\" data-sentry-source-file=\"old-stamps.jsx\" />\n            <TextField label={'Stamp Reducer'} value={stampReducerInput} onChange={e => setStampReducerInput(e.target.value)} type={'number'} InputProps={{\n            inputProps: {\n              min: 0,\n              max: 90\n            }\n          }} data-sentry-element=\"TextField\" data-sentry-source-file=\"old-stamps.jsx\" />\n          </Stack>\n        </CardTitleAndValue>\n      </Stack>\n      <Tabber tabs={Object.keys(state?.account?.stamps)} onTabChange={handleOnClick} data-sentry-element=\"Tabber\" data-sentry-source-file=\"old-stamps.jsx\">\n        <Stack direction={'row'} flexWrap={'wrap'} justifyContent={'center'} gap={3} data-sentry-element=\"Stack\" data-sentry-source-file=\"old-stamps.jsx\">\n          {stamps?.map((stamp, index) => {\n          const {\n            displayName,\n            rawName,\n            level,\n            itemReq,\n            multiplier = 1,\n            func,\n            x1,\n            x2,\n            reqItemMultiplicationLevel\n          } = stamp;\n          const goalLevel = stampsGoals?.[index] ? stampsGoals?.[index] < level ? level : stampsGoals?.[index] : level;\n          const goalBonus = growth(func, goalLevel, x1, x2, true) * multiplier;\n          let hasMaterials, hasMoney, hasCharacter, ownedMats;\n          const {\n            rawName: itemReqRawName\n          } = itemReq;\n          const materials = flattenCraftObject(crafts[items?.[itemReqRawName]?.displayName]);\n          const materialCost = accumulatedCost(index, level, 'material', stamp);\n          const goldCost = accumulatedCost(index, level, 'gold', stamp);\n          const isMaterialCost = goalLevel % reqItemMultiplicationLevel === 0;\n          if (goldCost) {\n            hasMoney = state?.account?.currencies?.rawMoney >= goldCost;\n          }\n          if (materials?.length > 0) {\n            hasMaterials = materials?.every(({\n              rawName,\n              type,\n              itemQuantity\n            }) => {\n              if (type === 'Equip') return true;\n              let ownedMats = state?.account?.storage?.filter(({\n                rawName: storageRawName\n              }) => storageRawName === rawName)?.amount;\n              ownedMats = subtractGreenStacks ? ownedMats - 1e7 : ownedMats;\n              return ownedMats >= itemQuantity * materialCost;\n            });\n          } else {\n            ownedMats = state?.account?.storage?.find(({\n              rawName: storageRawName\n            }) => storageRawName === itemReqRawName)?.amount;\n            ownedMats = subtractGreenStacks ? ownedMats - 1e7 : ownedMats;\n            hasMaterials = ownedMats >= materialCost;\n          }\n          const itemRequirements = {\n            ...itemReq,\n            materials,\n            materialCost,\n            goldCost,\n            isMaterialCost,\n            hasMaterials,\n            hasMoney\n          };\n          let bestCharacter = getBestCharacterForCraft(items?.[itemReq?.rawName], state?.characters, state?.account);\n          hasCharacter = bestCharacter?.maxCapacity >= itemRequirements?.materialCost;\n          const isBlank = displayName === 'Blank';\n          const bonus = getStampBonus(state?.account, Object.keys(state?.account?.stamps || {})?.[selectedTab], rawName, bestCharacter);\n          return <React.Fragment key={rawName + '' + displayName + '' + index}>\n              <Card sx={{\n              overflow: 'visible',\n              position: 'relative',\n              width: condenseView ? 150 : 230,\n              border: hasMaterials && hasMoney && hasCharacter && level > 0 ? '1px solid #81c784' : ''\n            }}>\n                <CardContent sx={{\n                '&:last-child': {\n                  paddingBottom: 4,\n                  ...(condenseView && {\n                    p: 0\n                  })\n                }\n              }}>\n                  {level > 0 ? <RequirementsWrapper>\n                    {!hasMaterials ? <HtmlTooltip title={<>\n                      <Typography>Not enough {cleanUnderscore(itemReq?.name)}</Typography>\n                      <Typography>You have {notateNumber(ownedMats ?? 0, 'Big')}, you\n                        need {notateNumber(Math.abs((ownedMats ?? 0) - itemRequirements?.materialCost), 'Big')} more</Typography>\n                    </>}>\n                      <img width={24} height={24} src={`${prefix}data/${itemReq?.rawName}.png`} alt={''} />\n                    </HtmlTooltip> : null}\n                    {!hasMoney ? <HtmlTooltip title={'Not enough coins'}>\n                      <img width={20} height={20} src={`${prefix}data/Coins5.png`} alt={''} />\n                    </HtmlTooltip> : null}\n                    {!hasCharacter ? <HtmlTooltip title={'Not enough capacity'}>\n                      <img width={24} height={24} style={{\n                      objectFit: 'contain'\n                    }} src={`${prefix}etc/Character.png`} alt={''} />\n                    </HtmlTooltip> : null}\n                  </RequirementsWrapper> : null}\n                  <Stack direction={'row'} alignItems={'center'} justifyContent={'space-around'} gap={2}>\n                    <Stack alignItems={'center'}>\n                      <HtmlTooltip dark={condenseView} title={condenseView ? isBlank ? '' : <StampFullDetails itemRequirements={itemRequirements} stampName={displayName} goalBonus={goalBonus} bestCharacter={bestCharacter} /> : <StampTooltip {...{\n                      ...stamp,\n                      goalLevel,\n                      goalBonus,\n                      bonus\n                    }} />}>\n                        <StampIcon width={48} height={48} level={level} src={`${prefix}data/${rawName}.png`} alt=\"\" />\n                      </HtmlTooltip>\n                      <Typography variant={'body1'}>Lv. {level}</Typography>\n                    </Stack>\n                    {!condenseView ? <TextField type={'number'} sx={{\n                    width: 90\n                  }} defaultValue={goalLevel} onChange={e => handleGoalChange(e, index)} label={'Goal'} variant={'outlined'} inputProps={{\n                    min: level || 0\n                  }} /> : null}\n                  </Stack>\n                  {!condenseView && <Info itemRequirements={itemRequirements} goalBonus={goalBonus} bestCharacter={bestCharacter} />}\n                </CardContent>\n              </Card>\n            </React.Fragment>;\n        })}\n        </Stack>\n      </Tabber>\n    </div>;\n};\nconst Info = ({\n  itemRequirements,\n  goalBonus,\n  bestCharacter,\n  stampName\n}) => {\n  const {\n    rawName,\n    materialCost,\n    isMaterialCost,\n    goldCost\n  } = itemRequirements;\n  return <Stack gap={1} mt={stampName ? 0 : 2} data-sentry-element=\"Stack\" data-sentry-component=\"Info\" data-sentry-source-file=\"old-stamps.jsx\">\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">{cleanUnderscore(stampName)}</Typography>\n    {unobtainableStamps[stampName] ? <Typography mt={1}>(Unobtainable)</Typography> : <>\n      <Stack gap={2} justifyContent={'center'} direction={'row'} alignItems={'center'}>\n        <BonusIcon src={`${prefix}data/SignStar3b.png`} alt=\"\" />\n        <Typography>{isNaN(goalBonus) ? 0 : goalBonus}</Typography>\n        <HtmlTooltip title={`Best to craft with ${bestCharacter?.character ?? 'Nobody'} (Capacity: ${isNaN(bestCharacter?.maxCapacity) ? 0 : notateNumber(bestCharacter?.maxCapacity, 'Big')})`}>\n          <Stack direction=\"row\" alignItems={'center'} gap={1}>\n            <ItemIcon hide={!materialCost || !isMaterialCost} src={`${prefix}data/${rawName}.png`} alt=\"\" />\n\n            {materialCost ? notateNumber(materialCost, 'Big') : null}\n          </Stack>\n        </HtmlTooltip>\n      </Stack>\n      <CoinDisplay title={''} money={getCoinsArray(goldCost)} />\n    </>}\n\n  </Stack>;\n};\nconst StampFullDetails = ({\n  itemRequirements,\n  goalBonus,\n  bestCharacter,\n  stampName\n}) => {\n  return <>\n    <Info itemRequirements={itemRequirements} goalBonus={goalBonus} bestCharacter={bestCharacter} stampName={stampName} data-sentry-element=\"Info\" data-sentry-source-file=\"old-stamps.jsx\" />\n  </>;\n};\nconst RequirementsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  transform: translate(10%, -50%);\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\nconst BonusIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n`;\nconst StampTooltip = ({\n  level,\n  goalLevel,\n  displayName,\n  effect,\n  multiplier = 1,\n  goalBonus,\n  bonus\n}) => {\n  return <>\n    <Typography variant={'h5'} data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography sx={{\n      color: level > 0 && multiplier > 1 ? 'multi' : ''\n    }} variant={'body1'} data-sentry-element=\"Typography\" data-sentry-source-file=\"old-stamps.jsx\">+{cleanUnderscore(effect.replace(/\\+{/, bonus))}</Typography>\n    {unobtainableStamps[displayName] ? <Typography mt={1}>(Unobtainable)</Typography> : null}\n    {level !== goalLevel ? <Typography mt={1} sx={{\n      color: level > 0 && multiplier > 1 ? 'multi' : ''\n    }} variant={'body1'}>Goal:\n      +{cleanUnderscore(effect.replace(/\\+{/, goalBonus))}</Typography> : null}\n  </>;\n};\nconst StampIcon = styled.img`\n  opacity: ${({\n  level\n}) => level === 0 ? .5 : 1};\n`;\nconst ItemIcon = styled.img`\n  width: 32px;\n  height: 32px;\n  opacity: ${({\n  hide\n}) => hide ? 0.5 : 1};\n`;\nexport default Stamps;"],"names":["window","__NEXT_P","push","__webpack_require__","CoinIcon","styled","img","_templateObject","__webpack_exports__","Z","variant","centered","style","money","title","maxCoins","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","div","data-sentry-component","data-sentry-source-file","jsx","Typography","textAlign","Stack","flexWrap","justifyContent","direction","gap","data-sentry-element","map","index","coinIndex","coin","Number","alignItems","src","prefix","concat","alt","component","className","components","tabs","icons","children","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","isMd","useMediaQuery","theme","breakpoints","down","noSsr","router","useRouter","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","useEffect","replace","pathname","undefined","shallow","array","Array","isArray","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Box","sx","flexGrow","display","Tabs","length","scrollButtons","allowScrollButtonsMobile","marginBottom","value","onChange","e","selected","newQuery","forEach","key","_this","Tab","iconPosition","icon","wrapped","label","minWidth","child","IconWithText","forwardRef","props","ref","stat","rest","Tooltip","position","width","displayName","TitleAndValue","boldTitle","titleStyle","valueStyle","fontWeight","fontSize","StyledBadge","Badge","CardAndBorder","cardProps","cardName","stars","cardIndex","name","rawName","amount","nextLevelReq","iconSrc","Fragment","BorderIcon","CardTooltip","CardIcon","isCardSet","effect","bonus","showInfo","realBonus","calcCardBonus","cleanUnderscore","mt","_","StarIcon","numberWithCommas","_templateObject1","_templateObject2","_templateObject3","TalentTooltip","level","funcX","x1","x2","funcY","y1","y2","description","talentId","mainStat","growth","secondaryStat","PlayersList","players","characters","height","classIndex","MissingData","CardTitleAndValue","raised","cardSx","imgOnly","imgStyle","tooltipTitle","stackProps","contentPadding","Card","my","xs","md","CardContent","p","color","gutterBottom","objectFit","Breakdown","breakdown","notation","notateNumber","Divider","bgcolor","CenteredStack","Info","bestCharacter","itemRequirements","goalBonus","stampName","materialCost","isMaterialCost","goldCost","unobtainableStamps","BonusIcon","isNaN","HtmlTooltip","character","maxCapacity","ItemIcon","hide","CoinDisplay","getCoinsArray","StampFullDetails","RequirementsWrapper","StampTooltip","goalLevel","multiplier","StampIcon","state","useContext","AppContext","gildedStamps","isRiftBonusUnlocked","account","rift","accountOptions","stampReducer","atoms","setSelectedTab","useState","stampsGoals","setStampsGoals","stampReducerInput","setStampReducerInput","forcedGildedStamp","setForcedGildedStamp","subtractGreenStacks","setSubtractGreenStacks","condenseView","setCondenseView","getStamps","Object","stampCategory","keys","stamps","useMemo","getAccumulatedCost","type","stamp","levelDiff","costFunc","calculateGoldCost","calculateMaterialCost","cost","itemReq","includes","Math","max","floor","fill","ind","totalCost","reduce","res","levelInd","reqItemMultiplicationLevel","accumulatedCost","useCallback","getBestCharacterForCraft","item","getHighestCapacityCharacter","baseMatCost","powMatBase","reductionVal","getVialsBonusByEffect","alchemy","vials","sigilBonus","getSigilBonus","p2w","sigils","stampReducerVal","pow","round","baseCoinCost","powCoinBase","reductionBribe","bribes","realBaseCost","done","handleGoalChange","debounce","target","parseInt","NextSeo","calcStampLevels","FormControlLabel","control","Switch","checked","mx","Link","underline","cursor","onClick","ArrowRightAltIcon","Checkbox","size","TextField","InputProps","inputProps","min","Tabber","items","hasMaterials","hasMoney","hasCharacter","ownedMats","func","itemReqRawName","materials","flattenCraftObject","crafts","currencies","rawMoney","every","itemQuantity","storage","filter","storageRawName","find","isBlank","getStampBonus","React","overflow","border","paddingBottom","abs","dark","defaultValue"],"sourceRoot":""}