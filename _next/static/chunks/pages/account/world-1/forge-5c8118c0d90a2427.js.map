{"version":3,"file":"static/chunks/pages/account/world-1/forge-5c8118c0d90a2427.js","mappings":"4aACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,yBACA,WACA,OAAeC,EAAQ,MACvB,EACA,oQCmBA,IAAMC,EAAWC,EAAAA,CAAMA,CAACC,GAAG,CAAAC,kBAK3BC,CAAAA,EAAAC,CAAA,CA3BoB,OAAC,CACnBC,QAAAA,EAAU,UAAU,CACpBC,SAAAA,EAAW,EAAI,CACfC,MAAAA,EAAQ,CAAC,CAAC,CACVC,MAAAA,CAAK,CACLC,MAAAA,EAAQ,aAAa,CACrBC,SAAAA,EAAW,CAAC,CACb,CAAAC,EACC,MAAO,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIP,MAAOA,EAAOQ,wBAAsB,cAAcC,0BAAwB,4BACnFP,EAAQ,GAAAG,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACX,MAAO,CAC1BY,UAAWb,EAAW,SAAW,MACnC,WAAIG,IAAsB,KAC1B,GAAAG,EAAAK,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACC,SAAU,OAAQC,eAAgBhB,EAAW,SAAW,aAAciB,UAAW,MAAOC,IAAKnB,aAAAA,EAAyB,IAAM,EAAGoB,sBAAoB,QAAQT,0BAAwB,2BACvLR,MAAAA,EAAAA,KAAAA,EAAAA,EAAOkB,GAAG,CAAC,CAAAf,EAAoBgB,QAAnB,CAACC,EAAWC,EAAK,CAAAlB,EAC5B,OAAOgB,EAAQjB,GAAYoB,OAAOD,IAAS,EAAI,GAAAjB,EAAAC,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAWlB,aAAAA,EAAyB,SAAW,MAAOmB,IAAKnB,aAAAA,EAAyB,EAAI,GAAIiB,eAAgB,SAAUS,WAAY,mBACpL,GAAAnB,EAAAK,GAAA,EAAClB,EAAAA,CAASiC,IAAK,GAAsBJ,MAAAA,CAAnBK,EAAAA,MAAMA,CAAC,cAAsBC,MAAA,CAAVN,EAAU,QAAOO,IAAI,KAC1D,GAAAvB,EAAAK,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACb,QAAS,QAAS+B,UAAW,OAAQC,UAAW,sBAAeP,OAAOD,OAFiHA,EAAO,GAAKD,GAGtM,IACf,OAGN,iIC+CAzB,CAAAA,EAAAC,CAAA,CAlEe,OAAC,CACdkC,KAAAA,CAAI,CACJC,MAAAA,CAAK,CACLC,SAAAA,CAAQ,CACRC,YAAAA,CAAW,CACXC,YAAAA,CAAW,CACXC,YAAAA,EAAc,YAAY,CAC1BC,UAAAA,CAAS,CACTC,SAAAA,EAAW,GAAG,CACdC,cAAAA,EAAgB,EAAE,CACnB,CAAAnC,EACOoC,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAAcC,GAASA,EAAMC,WAAW,CAACC,IAAI,CAAC,MAAO,CAChEC,MAAO,EACT,GACMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACTC,EAAaF,EAAOG,KAAK,CAACX,EAAS,CACnCY,EAAiBnB,EAAKoB,SAAS,CAACC,GAAOA,IAAQJ,GAC/CK,EAAcH,GAAkB,EAAIA,EAAiB,EAC3DI,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KAEHN,GACHF,EAAOS,OAAO,CAAC,CACbC,SAAUV,EAAOU,QAAQ,CACzBP,MAAO,CACL,GAAGH,EAAOG,KAAK,CACf,CAACX,EAAS,CAAEP,CAAI,CAACsB,EAAY,CAEjC,EAAGI,KAAAA,EAAW,CACZC,QAAS,EACX,EAEJ,EAAG,CAACV,EAAYV,EAAUP,EAAMsB,EAAaP,EAAO,EAgBpD,IAAMa,EAAQC,MAAMC,OAAO,CAAC5B,GAAYA,EAAW,CAACA,EAAS,CAC7D,MAAO,GAAA6B,EAAAxD,IAAA,EAACyD,EAAAA,CAAGA,CAAAA,CAACC,GAAI5B,aAAAA,EAA6B,CAC3C6B,SAAU,EACVC,QAAS,MACX,EAAI,CAAC,EAAGhD,sBAAoB,MAAMV,wBAAsB,SAASC,0BAAwB,uBACvF,GAAAqD,EAAApD,GAAA,EAACyD,EAAAA,CAAIA,CAAAA,CAACpE,SAAU,CAACyC,GAAQA,GAAQT,EAAKqC,MAAM,CAAG,EAAGC,cAAa,GAACC,yBAAwB,GAACN,GAAI,CAC3FO,aAAc,CAChB,EAAGzE,QAAS0C,GAAQT,EAAKqC,MAAM,EAAI,GAAKjC,EAAc,aAAe,WAAYqC,MAAOnB,EAAaoB,SAtBjF,CAACC,EAAGC,KACxB,IAAMC,EAAW,CACf,GAAG9B,EAAOG,KAAK,CACf,CAACX,EAAS,CAAEP,CAAI,CAAC4C,EAAS,EAG5BpC,EAAcsC,OAAO,CAACC,GAAO,OAAOF,CAAQ,CAACE,EAAI,EACjDhC,EAAOxD,IAAI,CAAC,CACVkE,SAAUV,EAAOU,QAAQ,CACzBP,MAAO2B,CACT,EAAGnB,KAAAA,EAAW,CACZC,QAAS,EACX,GACAxB,GAAeA,EAAYyC,EAC7B,EAQgIzD,sBAAoB,OAAOT,0BAAwB,sBAC9KsB,MAAAA,EAAAA,KAAAA,EAAAA,EAAMZ,GAAG,CAAC,CAACiC,EAAKhC,IACR,GAAA0C,EAAApD,GAAA,EAACqE,EAAAA,CAAGA,CAAAA,CAACC,aAAa,QAAQC,KAAMjD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAO,CAACZ,EAAM,EAAG,GAAA0C,EAAApD,GAAA,EAAChB,MAAAA,CAAI+B,IAAK,GAAAE,MAAA,CAAGD,EAAAA,MAAMA,EAAkBC,MAAA,CAAfK,MAAAA,EAAAA,KAAAA,EAAAA,CAAO,CAACZ,EAAM,CAAC,UAAY,KAAM8D,QAAO,GAACC,MAAO9C,EAAY,GAAKe,EAAKY,GAAI,CACtJoB,SAAU,EACZ,GAAQ,GAAUhE,MAAAA,CAAPgC,EAAI,KAASzB,MAAA,CAANP,OAGrBc,EAAcD,EAAW0B,MAAAA,EAAAA,KAAAA,EAAAA,EAAOxC,GAAG,CAAC,CAACkE,EAAOjE,IACpCA,IAAUiC,EAAcgC,EAAQ,QAG7C,4GCjEA,IAAMC,EAAQC,CAAAA,EAAAA,EAAAA,UAAAA,EAAW,CAAAnF,EAYtBoF,QAZuB,CACxBC,KAAAA,CAAI,CACJC,UAAAA,CAAS,CACTC,YAAAA,CAAW,CACXC,WAAAA,CAAU,CACVC,KAAAA,CAAI,CACJC,MAAAA,CAAK,CACLC,WAAAA,CAAU,CACVC,YAAAA,CAAW,CACXC,KAAAA,CAAI,CACJnG,QAAAA,EAAU,SAAS,CACnB,GAAGoG,EACJ,CAAA9F,EACO,CAAC+F,EAAMC,EAAQ,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,IACxB/C,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAImC,EAAM,CACR,GAAIM,EAAY,CACd,GAAI,CAACO,SAASb,GAAO,OAErB,OAAOW,EAAQ,CADkCX,GAAlCc,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,IAAIC,OAAOC,OAAO,GAAIhB,EAE/C,EAEJ,CACA,IAAMiB,EAAW,IAAIF,KACfG,EAAaD,EAASD,OAAO,GAAMd,CAAAA,MAAAA,EAAAA,EAAe,GAClDiB,EAAeC,CAAAA,EAAAA,EAAAA,CAAAA,EAAOpB,GAE5BW,EAAQ,CADyF,GAAlFG,CAAAA,EAAAA,EAAAA,WAAAA,EAAYG,MAAAA,EAAAA,KAAAA,EAAAA,EAAUD,OAAO,GAAIhB,EAAOkB,EAAcd,CAAAA,cAAAA,EAAuB,GAAK,GAE/F,CACAiB,SAAUjB,cAAAA,GAAuBe,CACnC,EACF,CACF,EAAG,CAACnB,EAAME,EAAY,EACtB,IAAMoB,OAAS,KACb,GAAI,CACFC,KAAAA,CAAI,CACJC,MAAAA,CAAK,CACLC,QAAAA,CAAO,CACPC,QAAAA,CAAO,CACR,CAAGhB,CAEY,MADhBgB,CAAAA,GAAW,KAETA,EAAU,EAEM,KADhBD,CAAAA,GAAW,KAETA,EAAU,EAEI,KADdD,CAAAA,GAAS,IAEPD,CAAAA,GAAQ,KAIdZ,EAAQ,CACN,GAAGD,CAAI,CACPa,KAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,QAAAA,CACF,EACF,EACMC,SAAW,KACf,GAAI,CACFJ,KAAAA,CAAI,CACJC,MAAAA,CAAK,CACLC,QAAAA,CAAO,CACPC,QAAAA,CAAO,CACR,CAAGhB,EACJ,GAAIa,IAAAA,GAAcC,IAAAA,GAAeC,IAAAA,GAAiBC,IAAAA,EAAe,CAC/D,GAAIvB,EACF,OAEF,GAAIK,EAEF,OAAOG,EAAQ,CADkCV,GAAlCa,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,IAAIC,OAAOC,OAAO,GAAIf,EAE/C,EAGN,CAEgB,IADhByB,CAAAA,GAAW,KAETA,EAAU,GAEM,IADhBD,CAAAA,GAAW,KAETA,EAAU,GAEI,IADdD,CAAAA,GAAS,KAEPA,EAAQ,EACRD,GAAQ,KAIdZ,EAAQ,CACN,GAAGD,CAAI,CACPa,KAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,QAAAA,CACF,EACF,EACAE,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,KACV,GAAI,CAAClB,EAAM,OAAO,IACdN,CAAS,cAATA,GAAyBM,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMW,QAAQ,EAGzCC,SAFAK,UAIJ,EAAG,GAAWrB,EAAoB,KAAP,KAC3B,IAAMuB,WAAaC,IACjB,IAAMC,EAAYC,OAAOF,GACzB,MAAOC,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAWpD,MAAM,IAAK,EAAI,IAAWzC,MAAA,CAAP4F,GAAWA,CAClD,EACA,OAAOpB,EAAO,CAACA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMW,QAAQ,GAAIhB,CAAAA,GAAUE,EAAc,GAAAlC,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAAE,GAAGuF,CAAI,CAAEV,IAAKA,WAAMQ,IAA4B,GAAAlC,EAAAxD,IAAA,EAACK,EAAAA,CAAUA,CAAAA,CAAE,GAAGuF,CAAI,CAAEV,IAAKA,EAAK1F,QAASA,EAASkE,GAAI,CAC1K0D,MAAO,GAA4C/F,MAAA,CAAzCwE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMW,QAAQ,GAAI,CAACb,EAAO,UAAY,GAClD,EAAGpE,UAAW,iBACTsE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMa,IAAI,EAAGM,WAAWnB,MAAAA,EAAAA,KAAAA,EAAAA,EAAMa,IAAI,EAAI,KAAO,GAC7CM,WAAWnB,MAAAA,EAAAA,KAAAA,EAAAA,EAAMc,KAAK,EAAI,KAC1BK,WAAWnB,MAAAA,EAAAA,KAAAA,EAAAA,EAAMe,OAAO,EAAK,IAC7B,CAACf,MAAAA,EAAAA,KAAAA,EAAAA,EAAMa,IAAI,EAAS,GAAN,IACd,CAACb,MAAAA,EAAAA,KAAAA,EAAAA,EAAMa,IAAI,EAAqC,GAAlCM,WAAWnB,MAAAA,EAAAA,KAAAA,EAAAA,EAAMgB,OAAO,EAAI,OAC7B,IACpB,EACAvH,CAAAA,EAAAC,CAAA,CAAeyF,qNCrHf,IAAMqC,EAAO,CACXC,MAAO,GACPpG,WAAY,QACd,EAgHMqG,OAAS,OAAC,CACd7H,MAAAA,EAAQ,CAAC,CAAC,CACV8H,KAAAA,CAAI,CACJtD,MAAAA,CAAK,CACN,CAAApE,EACC,MAAO,GAAA0D,EAAAxD,IAAA,EAACC,MAAAA,CAAIP,MAAOA,EAAOQ,wBAAsB,SAASC,0BAAwB,sBAC/E,GAAAqD,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACO,sBAAoB,aAAaT,0BAAwB,qBAAaqH,IAClF,GAAAhE,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACkB,UAAW,MAAOX,sBAAoB,aAAaT,0BAAwB,qBAAa+D,MAExG,CACA5E,CAAAA,EAAA,QAzHc,SA4BLmI,EAAAA,EAAAA,EA2CAA,EAAAA,EAAAA,EAtEP,GAAM,CACJA,MAAAA,CAAK,CACN,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAUA,EACnBzF,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAAcC,GAASA,EAAMC,WAAW,CAACC,IAAI,CAAC,MAAO,CAChEC,MAAO,EACT,GACMqF,QAAU,CAACC,EAAOC,IACtB,EAIID,EAAQ,EACHE,KAAKC,KAAK,CAAC,GAAKD,KAAKE,GAAG,CAAC,IAAKF,KAAKE,GAAG,CAACJ,EAAO,OAEhDE,KAAKC,KAAK,CAAC,IAAMD,KAAKE,GAAG,CAACH,EAAWD,EAAQ,IAL3CE,KAAKC,KAAK,CAAC,IAAMD,KAAKE,GAAG,CAAC,IAAKF,KAAKE,GAAG,CAACJ,EAAO,OAOpDK,aAAe,CAACL,EAAOM,EAAUL,EAAWM,KAChD,IAAIC,EAAY,EAChB,IAAK,IAAIC,EAAIF,EAAY,EAAIP,EAAOS,EAAIH,EAAUG,IAChDD,GAAaT,QAAQU,EAAGR,GAE1B,OAAOO,MAAAA,EAAAA,EAAa,CACtB,EACA,MAAO,GAAA7E,EAAAxD,IAAA,EAAAwD,EAAA+E,QAAA,YACL,GAAA/E,EAAApD,GAAA,EAACoI,EAAAA,EAAOA,CAAAA,CAAC5I,MAAM,yBAAyB6I,YAAY,sCAAsC7H,sBAAoB,UAAUT,0BAAwB,cAChJ,GAAAqD,EAAAxD,IAAA,EAAC0I,EAAAA,CAAMA,CAAAA,CAACjH,KAAM,CAAC,QAAS,WAAW,CAAEb,sBAAoB,SAAST,0BAAwB,sBACxF,GAAAqD,EAAApD,GAAA,EAACuI,EAAAA,EAAIA,CAAAA,CAACC,UAAS,GAACjI,IAAK,EAAGC,sBAAoB,OAAOT,0BAAwB,qBACxEsH,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOoB,OAAO,GAAdpB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBqB,KAAK,GAArBrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAuBsB,IAAI,GAA3BtB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA6B5G,GAAG,CAAC,CAAAf,EAK/BgB,SACqBkI,KANW,CACjCA,IAAAA,CAAG,CACHC,OAAAA,CAAM,CACNC,IAAAA,CAAG,CACHC,aAAAA,CAAY,CACb,CAAArJ,EACOsJ,EAAgBJ,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKI,aAAa,GAAlBJ,KAAAA,IAAAA,EAAAA,EAAsB,EACtCK,EAAY,CAACL,EAAKC,EAAQC,EAAI,CAC9BI,EAAQD,EAAUE,KAAK,CAAC,OAAC,CAC7BC,QAAAA,CAAO,CACR,CAAA1J,QAAK0J,UAAAA,CAAkB,GACxB,MAAO,GAAAhG,EAAApD,GAAA,EAACuI,EAAAA,EAAIA,CAAAA,CAACc,KAAI,YACf,GAAAjG,EAAApD,GAAA,EAACsJ,EAAAA,CAAIA,CAAAA,CAAChG,GAAI,CACRiG,SAAU,WACVC,YAAaT,EAAe,YAAc,MAC5C,EAAG3J,QAAS,oBACV,GAAAgE,EAAApD,GAAA,EAACyJ,EAAAA,CAAWA,CAAAA,UACV,GAAArG,EAAAxD,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAW,MAAOQ,WAAY,mBAClCmI,MAAAA,EAAAA,KAAAA,EAAAA,EAAWxI,GAAG,CAAC,CAAAf,EAGbgK,QAHc,CACfN,QAAAA,CAAO,CACPO,SAAAA,CAAQ,CACT,CAAAjK,EACC,MAAO,GAAA0D,EAAAxD,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAAgCmD,GAAI2D,YAC/C,GAAA7D,EAAApD,GAAA,EAAChB,MAAAA,CAAIM,MAAO,CACV4H,MAAO,EAAiB,GAAT,OACf0C,QAASV,EAAQ,EAAI,CACvB,EAAGnI,IAAK,GAAiBE,MAAA,CAAdD,EAAAA,MAAMA,CAAC,SAAsCC,MAAA,CAA/B,EAAmB,YAAVmI,EAAsB,QAAOlI,IAAI,KAClEyI,EAAW,EAAI,GAAAvG,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACb,QAAS,QAAS+B,UAAW,gBAASwI,IAAyB,GAAAvG,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACb,QAAS,QAAS+B,UAAW,gBAAQ,WAL3H,GAAcuI,MAAAA,CAAXN,EAAQ,KAAYnI,MAAA,CAATyI,GAOnC,GACA,GAAAtG,EAAAxD,IAAA,EAACyD,EAAAA,CAAGA,CAAAA,WACF,GAAAD,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACqD,GAAI,CACduG,SAAU,EACZ,EAAG7C,MAAM,iBAAiB8C,aAAY,YAAC,oBACvC,GAAA1G,EAAApD,GAAA,EAAC4E,EAAAA,CAAKA,CAAAA,CAACO,KAAM,YAAaF,YAAaoC,MAAAA,EAAAA,KAAAA,EAAAA,EAAOpC,WAAW,CAAEF,KAAM,IAAIe,OAAOC,OAAO,GAAKiD,aAnBnE,GAAUH,MAAAA,CAAPD,EAAI,KAAaE,MAAAA,CAAVD,EAAO,KAAUnI,MAAAA,CAAPoI,EAAI,KAAS7H,MAAA,CAANP,KAJnC,GAAUmI,MAAAA,CAAPD,EAAI,KAAaE,MAAAA,CAAVD,EAAO,KAAUnI,MAAAA,CAAPoI,EAAI,KAAS7H,MAAA,CAANP,GA6BpD,KAEF,GAAA0C,EAAApD,GAAA,EAACG,EAAAA,CAAKA,CAAAA,CAACI,IAAK,EAAGC,sBAAoB,QAAQT,0BAAwB,qBAChEsH,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOoB,OAAO,GAAdpB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBqB,KAAK,GAArBrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAuB0C,QAAQ,GAA/B1C,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiC5G,GAAG,CAAC,CAAAf,EAKnCgB,QALoC,CACrC+G,MAAAA,CAAK,CACLM,SAAAA,CAAQ,CACRM,YAAAA,CAAW,CACXX,UAAAA,CAAS,CACV,CAAAhI,EACOsK,EAAOxC,QAAQC,EAAOC,GACtBO,EAAYH,aAAaL,EAAOM,EAAUL,GAC1CM,EAAYF,aAAaL,EAAOM,EAAUL,EAAW,IAC3D,MAAO,GAAAtE,EAAApD,GAAA,EAACsJ,EAAAA,CAAIA,CAAAA,CAA2BhG,GAAI,CACzC4D,MAAO,aACT,WACE,GAAA9D,EAAApD,GAAA,EAACyJ,EAAAA,CAAWA,CAAAA,CAACnG,GAAI,CACf2G,OAAQxC,GAASM,EAAW,YAAc,GAC1CyB,YAAa/B,GAASM,EAAW,gBAAkB,EACrD,WACE,GAAA3E,EAAAxD,IAAA,EAACO,EAAAA,CAAKA,CAAAA,CAACG,UAAU,MAAMC,IAAK,EAAGH,SAAU,iBACvC,GAAAgD,EAAApD,GAAA,EAACmH,OAAAA,CAAOC,KAAM,MAAOtD,MAAO,GAAciE,MAAAA,CAAXN,EAAM,OAAcxG,MAAA,CAAT8G,KAC1C,GAAA3E,EAAApD,GAAA,EAACmH,OAAAA,CAAO7H,MAAO,CACb4H,MAAO,GACT,EAAGE,KAAM,cAAetD,MAAOuE,EAAY6B,UAAU,KACrD,GAAA9G,EAAApD,GAAA,EAACmH,OAAAA,CAAO7H,MAAO,CACb4H,MAAO,GACT,EAAGE,KAAM,OAAQtD,MAAO2D,EAAQM,EAAW,GAAA3E,EAAApD,GAAA,EAACmK,EAAAA,CAAWA,CAAAA,CAAC9K,SAAU,GAAOG,MAAO,GAAIC,SAAU,EAAGF,MAAO6K,CAAAA,EAAAA,EAAAA,aAAAA,EAAcJ,KAAY,GAAA5G,EAAApD,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAAC+G,MAAO,yBAAiB,YAGtK,GAAA5D,EAAApD,GAAA,EAACmH,OAAAA,CAAO7H,MAAO,CACboF,SAAU,IACV5D,WAAY,YACd,EAAGsG,KAAMK,EAAQM,EAAW,cAAgB,aAAcjE,MAAO,GAAAV,EAAApD,GAAA,EAACmK,EAAAA,CAAWA,CAAAA,CAAC9K,SAAU,GAAOG,MAAO,GAAIC,SAAU,EAAGF,MAAO6K,CAAAA,EAAAA,EAAAA,aAAAA,EAAc3C,EAAQM,EAAWE,EAAYD,aApB/J,GAAYtH,MAAAA,CAAT+G,EAAM,KAASxG,MAAA,CAANP,GA0BhC,UAIR","sources":["webpack://_N_E/?bd40","webpack://_N_E/./components/common/CoinDisplay.jsx","webpack://_N_E/./components/common/Tabber.jsx","webpack://_N_E/./components/common/Timer/index.jsx","webpack://_N_E/./pages/account/world-1/forge.jsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-1/forge\",\n      function () {\n        return require(\"private-next-pages/account/world-1/forge.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-1/forge\"])\n      });\n    }\n  ","import { prefix } from 'utility/helpers';\nimport styled from '@emotion/styled';\nimport { Stack, Typography } from '@mui/material';\nconst CoinDisplay = ({\n  variant = 'vertical',\n  centered = true,\n  style = {},\n  money,\n  title = 'Total Money',\n  maxCoins = 5\n}) => {\n  return <div style={style} data-sentry-component=\"CoinDisplay\" data-sentry-source-file=\"CoinDisplay.jsx\">\n    {title ? <Typography style={{\n      textAlign: centered ? 'center' : 'left'\n    }}>{title}</Typography> : null}\n    <Stack flexWrap={'wrap'} justifyContent={centered ? 'center' : 'flex-start'} direction={'row'} gap={variant === 'vertical' ? 2.3 : 1} data-sentry-element=\"Stack\" data-sentry-source-file=\"CoinDisplay.jsx\">\n      {money?.map(([coinIndex, coin], index) => {\n        return index < maxCoins && Number(coin) >= 0 ? <Stack direction={variant === 'vertical' ? 'column' : 'row'} gap={variant === 'vertical' ? 0 : .5} justifyContent={'center'} alignItems={'center'} key={coin + '' + coinIndex}>\n            <CoinIcon src={`${prefix}data/Coins${coinIndex}.png`} alt=\"\" />\n            <Typography variant={'body1'} component={'span'} className={'coin-value'}>{Number(coin)}</Typography>\n          </Stack> : null;\n      })}\n    </Stack>\n  </div>;\n};\nconst CoinIcon = styled.img`\n  width: 23px;\n  height: 27px;\n  object-fit: contain;\n`;\nexport default CoinDisplay;","import React, { useEffect } from 'react';\nimport { Tab, Tabs, useMediaQuery } from '@mui/material';\nimport { prefix } from '@utility/helpers';\nimport Box from '@mui/material/Box';\nimport { useRouter } from 'next/router';\nconst Tabber = ({\n  tabs,\n  icons,\n  children,\n  onTabChange,\n  forceScroll,\n  orientation = 'horizontal',\n  iconsOnly,\n  queryKey = 't',\n  clearOnChange = []\n}) => {\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const router = useRouter();\n  const queryValue = router.query[queryKey];\n  const activeTabIndex = tabs.findIndex(tab => tab === queryValue);\n  const selectedTab = activeTabIndex >= 0 ? activeTabIndex : 0;\n  useEffect(() => {\n    // Set the default query parameter if missing\n    if (!queryValue) {\n      router.replace({\n        pathname: router.pathname,\n        query: {\n          ...router.query,\n          [queryKey]: tabs[selectedTab]\n        }\n      }, undefined, {\n        shallow: true\n      });\n    }\n  }, [queryValue, queryKey, tabs, selectedTab, router]);\n  const handleOnClick = (e, selected) => {\n    const newQuery = {\n      ...router.query,\n      [queryKey]: tabs[selected]\n    };\n    // Remove specified query parameters\n    clearOnChange.forEach(key => delete newQuery[key]);\n    router.push({\n      pathname: router.pathname,\n      query: newQuery\n    }, undefined, {\n      shallow: true\n    });\n    onTabChange && onTabChange(selected);\n  };\n  const array = Array.isArray(children) ? children : [children];\n  return <Box sx={orientation === 'vertical' ? {\n    flexGrow: 1,\n    display: 'flex'\n  } : {}} data-sentry-element=\"Box\" data-sentry-component=\"Tabber\" data-sentry-source-file=\"Tabber.jsx\">\n    <Tabs centered={!isMd || isMd && tabs.length < 4} scrollButtons allowScrollButtonsMobile sx={{\n      marginBottom: 3\n    }} variant={isMd && tabs.length >= 4 || forceScroll ? 'scrollable' : 'standard'} value={selectedTab} onChange={handleOnClick} data-sentry-element=\"Tabs\" data-sentry-source-file=\"Tabber.jsx\">\n      {tabs?.map((tab, index) => {\n        return <Tab iconPosition=\"start\" icon={icons?.[index] ? <img src={`${prefix}${icons?.[index]}.png`} /> : null} wrapped label={iconsOnly ? '' : tab} sx={{\n          minWidth: 62\n        }} key={`${tab}-${index}`} />;\n      })}\n    </Tabs>\n    {onTabChange ? children : array?.map((child, index) => {\n      return index === selectedTab ? child : null;\n    })}\n  </Box>;\n};\nexport default Tabber;","import { forwardRef, useEffect, useState } from 'react';\nimport useInterval from 'components/hooks/useInterval';\nimport { isPast } from 'date-fns';\nimport { getDuration } from 'utility/helpers';\nimport { Typography } from '@mui/material';\nconst Timer = forwardRef(({\n  date,\n  startDate,\n  lastUpdated,\n  stopAtZero,\n  type,\n  pause,\n  staticTime,\n  placeholder,\n  loop,\n  variant = 'inherit',\n  ...rest\n}, ref) => {\n  const [time, setTime] = useState();\n  useEffect(() => {\n    if (date) {\n      if (staticTime) {\n        if (!isFinite(date)) return;\n        let duration = getDuration(new Date().getTime(), date);\n        return setTime({\n          ...duration\n        });\n      }\n      const tempTime = new Date();\n      const timePassed = tempTime.getTime() - (lastUpdated ?? 0);\n      const dateIsInPast = isPast(date);\n      let duration = getDuration(tempTime?.getTime(), date + timePassed * (type === 'countdown' ? -1 : 1));\n      setTime({\n        ...duration,\n        overtime: type === 'countdown' ? dateIsInPast : false\n      });\n    }\n  }, [date, lastUpdated]);\n  const tickUp = () => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = time;\n    seconds += 1;\n    if (seconds === 60) {\n      seconds = 0;\n      minutes += 1;\n      if (minutes === 60) {\n        minutes = 0;\n        hours += 1;\n        if (hours === 24) {\n          days += 1;\n        }\n      }\n    }\n    setTime({\n      ...time,\n      days,\n      hours,\n      minutes,\n      seconds\n    });\n  };\n  const tickDown = () => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = time;\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n      if (stopAtZero) {\n        return;\n      }\n      if (loop) {\n        let duration = getDuration(new Date().getTime(), startDate);\n        return setTime({\n          ...duration\n        });\n      }\n    }\n    seconds -= 1;\n    if (seconds === -1) {\n      seconds = 59;\n      minutes -= 1;\n      if (minutes === -1) {\n        minutes = 59;\n        hours -= 1;\n        if (hours === -1) {\n          hours = 0;\n          days -= 1;\n        }\n      }\n    }\n    setTime({\n      ...time,\n      days,\n      hours,\n      minutes,\n      seconds\n    });\n  };\n  useInterval(() => {\n    if (!time) return null;\n    if (type === 'countdown' && !time?.overtime) {\n      tickDown();\n    } else {\n      tickUp();\n    }\n  }, !pause && !staticTime ? 1000 : null);\n  const wrapNumber = number => {\n    const strNumber = String(number);\n    return strNumber?.length === 1 ? `0${number}` : number;\n  };\n  return time ? (time?.overtime || pause) && placeholder ? <Typography {...rest} ref={ref}>{placeholder}</Typography> : <Typography {...rest} ref={ref} variant={variant} sx={{\n    color: `${time?.overtime && !loop ? '#f91d1d' : ''}`\n  }} component={'span'}>\n      {time?.days ? wrapNumber(time?.days) + 'd:' : ''}\n      {wrapNumber(time?.hours) + 'h:'}\n      {wrapNumber(time?.minutes) + `m`}\n      {!time?.days ? ':' : ''}\n      {!time?.days ? wrapNumber(time?.seconds) + 's' : ''}\n    </Typography> : null;\n});\nexport default Timer;","import { AppContext } from '../../../components/common/context/AppProvider';\nimport React, { useContext } from 'react';\nimport { Card, CardContent, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\nimport { getCoinsArray, prefix } from '../../../utility/helpers';\nimport CoinDisplay from '../../../components/common/CoinDisplay';\nimport { NextSeo } from 'next-seo';\nimport Tabber from '../../../components/common/Tabber';\nimport Timer from '../../../components/common/Timer';\nimport Box from '@mui/material/Box';\nconst slot = {\n  width: 72,\n  alignItems: 'center'\n};\nconst Forge = () => {\n  const {\n    state\n  } = useContext(AppContext);\n  const isMd = useMediaQuery(theme => theme.breakpoints.down('md'), {\n    noSsr: true\n  });\n  const getCost = (level, costMulti) => {\n    if (!costMulti) {\n      // this is forge slots, has it's own math.\n      return Math.round(200 * Math.pow(5.4, Math.pow(level, 0.83)));\n    }\n    if (level < 5) {\n      return Math.round(50 * Math.pow(2.5, Math.pow(level, 0.51)));\n    }\n    return Math.round(400 * Math.pow(costMulti, level - 5));\n  };\n  const getCostToMax = (level, maxLevel, costMulti, totalCost) => {\n    let costToMax = 0;\n    for (let i = totalCost ? 1 : level; i < maxLevel; i++) {\n      costToMax += getCost(i, costMulti);\n    }\n    return costToMax ?? 0;\n  };\n  return <>\n    <NextSeo title=\"Forge | Idleon Toolbox\" description=\"Keep track of your forge production\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"forge.jsx\" />\n    <Tabber tabs={['Slots', 'Upgrades']} data-sentry-element=\"Tabber\" data-sentry-source-file=\"forge.jsx\">\n      <Grid container gap={2} data-sentry-element=\"Grid\" data-sentry-source-file=\"forge.jsx\">\n        {state?.account?.forge?.list?.map(({\n          ore,\n          barrel,\n          bar,\n          isBrimestone\n        }, index) => {\n          const timeTillEmpty = ore?.timeTillEmpty ?? 0;\n          const materials = [ore, barrel, bar];\n          const empty = materials.every(({\n            rawName\n          }) => rawName === 'Blank');\n          return <Grid item key={`${ore}-${barrel}-${bar}-${index}`}>\n            <Card sx={{\n              position: 'relative',\n              borderColor: isBrimestone ? '#9b689bbf' : 'none'\n            }} variant={'outlined'} key={`${ore}-${barrel}-${bar}-${index}`}>\n              <CardContent>\n                <Stack direction={'row'} alignItems={'center'}>\n                  {materials?.map(({\n                    rawName,\n                    quantity\n                  }, matIndex) => {\n                    return <Stack key={`${rawName}-${matIndex}`} sx={slot}>\n                      <img style={{\n                        width: !isMd ? 'auto' : 36,\n                        opacity: empty ? 0 : 1\n                      }} src={`${prefix}data/${!empty ? rawName : 'CopperBar'}.png`} alt=\"\" />\n                      {quantity > 0 ? <Typography variant={'body1'} component={'span'}>{quantity}</Typography> : <Typography variant={'body1'} component={'span'}>&nbsp;</Typography>}\n                    </Stack>;\n                  })}\n                  <Box>\n                    <Typography sx={{\n                      fontSize: 14\n                    }} color=\"text.secondary\" gutterBottom>Time till empty</Typography>\n                    <Timer type={'countdown'} lastUpdated={state?.lastUpdated} date={new Date().getTime() + timeTillEmpty} />\n                  </Box>\n                </Stack>\n              </CardContent>\n            </Card>\n          </Grid>;\n        })}\n      </Grid>\n      <Stack gap={3} data-sentry-element=\"Stack\" data-sentry-source-file=\"forge.jsx\">\n        {state?.account?.forge?.upgrades?.map(({\n          level,\n          maxLevel,\n          description,\n          costMulti\n        }, index) => {\n          const cost = getCost(level, costMulti);\n          const costToMax = getCostToMax(level, maxLevel, costMulti);\n          const totalCost = getCostToMax(level, maxLevel, costMulti, true);\n          return <Card key={`${level}-${index}`} sx={{\n            width: 'fit-content'\n          }}>\n            <CardContent sx={{\n              border: level >= maxLevel ? '1px solid' : '',\n              borderColor: level >= maxLevel ? 'success.light' : ''\n            }}>\n              <Stack direction=\"row\" gap={3} flexWrap={'wrap'}>\n                <Column name={'Lv.'} value={`${level} / ${maxLevel}`} />\n                <Column style={{\n                  width: 300\n                }} name={'Description'} value={description.capitalize()} />\n                <Column style={{\n                  width: 120\n                }} name={'Cost'} value={level < maxLevel ? <CoinDisplay centered={false} title={''} maxCoins={3} money={getCoinsArray(cost)} /> : <Typography color={'success.light'}>Maxed</Typography>} />\n\n\n                <Column style={{\n                  minWidth: 120,\n                  alignItems: 'flex-start'\n                }} name={level < maxLevel ? 'Cost To Max' : 'Total cost'} value={<CoinDisplay centered={false} title={''} maxCoins={3} money={getCoinsArray(level < maxLevel ? costToMax : totalCost)} />} />\n\n\n              </Stack>\n            </CardContent>\n          </Card>;\n        })}\n      </Stack>\n    </Tabber>\n  </>;\n};\nconst Column = ({\n  style = {},\n  name,\n  value\n}) => {\n  return <div style={style} data-sentry-component=\"Column\" data-sentry-source-file=\"forge.jsx\">\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"forge.jsx\">{name}</Typography>\n    <Typography component={'div'} data-sentry-element=\"Typography\" data-sentry-source-file=\"forge.jsx\">{value}</Typography>\n  </div>;\n};\nexport default Forge;"],"names":["window","__NEXT_P","push","__webpack_require__","CoinIcon","styled","img","_templateObject","__webpack_exports__","Z","variant","centered","style","money","title","maxCoins","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","div","data-sentry-component","data-sentry-source-file","jsx","Typography","textAlign","Stack","flexWrap","justifyContent","direction","gap","data-sentry-element","map","index","coinIndex","coin","Number","alignItems","src","prefix","concat","alt","component","className","tabs","icons","children","onTabChange","forceScroll","orientation","iconsOnly","queryKey","clearOnChange","isMd","useMediaQuery","theme","breakpoints","down","noSsr","router","useRouter","queryValue","query","activeTabIndex","findIndex","tab","selectedTab","useEffect","replace","pathname","undefined","shallow","array","Array","isArray","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Box","sx","flexGrow","display","Tabs","length","scrollButtons","allowScrollButtonsMobile","marginBottom","value","onChange","e","selected","newQuery","forEach","key","Tab","iconPosition","icon","wrapped","label","minWidth","child","Timer","forwardRef","ref","date","startDate","lastUpdated","stopAtZero","type","pause","staticTime","placeholder","loop","rest","time","setTime","useState","isFinite","getDuration","Date","getTime","tempTime","timePassed","dateIsInPast","isPast","overtime","tickUp","days","hours","minutes","seconds","tickDown","useInterval","wrapNumber","number","strNumber","String","color","slot","width","Column","name","state","useContext","AppContext","getCost","level","costMulti","Math","round","pow","getCostToMax","maxLevel","totalCost","costToMax","i","Fragment","NextSeo","description","Tabber","Grid","container","account","forge","list","ore","barrel","bar","isBrimestone","timeTillEmpty","materials","empty","every","rawName","item","Card","position","borderColor","CardContent","matIndex","quantity","opacity","fontSize","gutterBottom","upgrades","cost","border","capitalize","CoinDisplay","getCoinsArray"],"sourceRoot":""}