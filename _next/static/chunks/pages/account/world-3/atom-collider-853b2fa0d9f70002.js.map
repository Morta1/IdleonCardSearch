{"version":3,"file":"static/chunks/pages/account/world-3/atom-collider-853b2fa0d9f70002.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/node_modules/@mui/base/useBadge/useBadge.js","webpack://_N_E/./node_modules/@mui/material/Badge/badgeClasses.js","webpack://_N_E/./node_modules/@mui/material/Badge/Badge.js","webpack://_N_E/./node_modules/@mui/utils/esm/usePreviousProps.js","webpack://_N_E/?e316","webpack://_N_E/./components/common/Timer/index.jsx","webpack://_N_E/./components/common/styles.jsx","webpack://_N_E/./pages/account/world-3/atom-collider.jsx","webpack://_N_E/./node_modules/react-process-string/dist/index.js","webpack://_N_E/<anon>"],"sourcesContent":["import { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base/react-badge/hooks-api/#use-badge)\n */\nexport default function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport useBadge from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/account/world-3/atom-collider\",\n      function () {\n        return require(\"private-next-pages/account/world-3/atom-collider.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/account/world-3/atom-collider\"])\n      });\n    }\n  ","import { forwardRef, useEffect, useState } from 'react';\nimport useInterval from 'components/hooks/useInterval';\nimport { isPast } from 'date-fns';\nimport { getDuration } from 'utility/helpers';\nimport { Typography } from '@mui/material';\nconst Timer = forwardRef(({\n  date,\n  startDate,\n  lastUpdated,\n  stopAtZero,\n  type,\n  pause,\n  staticTime,\n  placeholder,\n  loop,\n  variant = 'inherit',\n  ...rest\n}, ref) => {\n  const [time, setTime] = useState();\n  useEffect(() => {\n    if (date) {\n      if (staticTime) {\n        if (!isFinite(date)) return;\n        let duration = getDuration(new Date().getTime(), date);\n        return setTime({\n          ...duration\n        });\n      }\n      const tempTime = new Date();\n      const timePassed = tempTime.getTime() - (lastUpdated ?? 0);\n      const dateIsInPast = isPast(date);\n      let duration = getDuration(tempTime?.getTime(), date + timePassed * (type === 'countdown' ? -1 : 1));\n      setTime({\n        ...duration,\n        overtime: type === 'countdown' ? dateIsInPast : false\n      });\n    }\n  }, [date, lastUpdated]);\n  const tickUp = () => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = time;\n    seconds += 1;\n    if (seconds === 60) {\n      seconds = 0;\n      minutes += 1;\n      if (minutes === 60) {\n        minutes = 0;\n        hours += 1;\n        if (hours === 24) {\n          days += 1;\n        }\n      }\n    }\n    setTime({\n      ...time,\n      days,\n      hours,\n      minutes,\n      seconds\n    });\n  };\n  const tickDown = () => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = time;\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n      if (stopAtZero) {\n        return;\n      }\n      if (loop) {\n        let duration = getDuration(new Date().getTime(), startDate);\n        return setTime({\n          ...duration\n        });\n      }\n    }\n    seconds -= 1;\n    if (seconds === -1) {\n      seconds = 59;\n      minutes -= 1;\n      if (minutes === -1) {\n        minutes = 59;\n        hours -= 1;\n        if (hours === -1) {\n          hours = 0;\n          days -= 1;\n        }\n      }\n    }\n    setTime({\n      ...time,\n      days,\n      hours,\n      minutes,\n      seconds\n    });\n  };\n  useInterval(() => {\n    if (!time) return null;\n    if (type === 'countdown' && !time?.overtime) {\n      tickDown();\n    } else {\n      tickUp();\n    }\n  }, !pause && !staticTime ? 1000 : null);\n  const wrapNumber = number => {\n    const strNumber = String(number);\n    return strNumber?.length === 1 ? `0${number}` : number;\n  };\n  return time ? (time?.overtime || pause) && placeholder ? <Typography {...rest} ref={ref}>{placeholder}</Typography> : <Typography {...rest} ref={ref} variant={variant} sx={{\n    color: `${time?.overtime && !loop ? '#f91d1d' : ''}`\n  }} component={'span'}>\n      {time?.days ? wrapNumber(time?.days) + 'd:' : ''}\n      {wrapNumber(time?.hours) + 'h:'}\n      {wrapNumber(time?.minutes) + `m`}\n      {!time?.days ? ':' : ''}\n      {!time?.days ? wrapNumber(time?.seconds) + 's' : ''}\n    </Typography> : null;\n});\nexport default Timer;","import React, { forwardRef } from 'react';\nimport { cleanUnderscore, growth, notateNumber, numberWithCommas, prefix } from 'utility/helpers';\nimport { Badge, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport Tooltip from '../Tooltip';\nimport { calcCardBonus } from 'parsers/cards';\nexport const IconWithText = forwardRef((props, ref) => {\n  const {\n    stat,\n    icon,\n    img,\n    title = '',\n    ...rest\n  } = props;\n  return <Tooltip title={title}>\n    <Stack alignItems={'center'} {...rest} ref={ref} style={{\n      position: 'relative',\n      width: 'fit-content'\n    }}>\n      <img {...img} src={`${prefix}data/${icon}.png`} alt=\"\" />\n      <Typography variant={'body1'} component={'span'}>{stat}</Typography>\n    </Stack>\n  </Tooltip>;\n});\nIconWithText.displayName = 'IconWithText';\nexport const TitleAndValue = ({\n  title,\n  value,\n  boldTitle,\n  titleStyle = {},\n  valueStyle = {}\n}) => {\n  return <Stack direction={'row'} flexWrap={'wrap'} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"TitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    {title ? <Typography sx={titleStyle} fontWeight={boldTitle ? 'bold' : 500} component={'span'}>{title}:&nbsp;</Typography> : null}\n    <Typography fontSize={15} component={'span'} sx={valueStyle} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{value}</Typography>\n  </Stack>;\n};\nexport const StyledBadge = styled(Badge)`\n  & .MuiBadge-badge {\n    background-color: #d5d5dc;\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\nexport const CardAndBorder = cardProps => {\n  const {\n    cardName,\n    stars,\n    cardIndex,\n    name,\n    variant,\n    rawName,\n    amount,\n    nextLevelReq\n  } = cardProps;\n  const iconSrc = variant === 'cardSet' ? `${prefix}data/${rawName}.png` : `${prefix}data/2Cards${cardIndex}.png`;\n  const realCardName = variant === 'cardSet' ? name : cardName;\n  return <>\n    {stars > 0 ? <BorderIcon src={`${prefix}data/CardEquipBorder${stars}.png`} alt=\"\" /> : null}\n    <Tooltip title={<CardTooltip {...{\n      ...cardProps,\n      cardName: realCardName,\n      nextLevelReq,\n      amount\n    }} />} data-sentry-element=\"Tooltip\" data-sentry-source-file=\"styles.jsx\">\n      <CardIcon isCardSet={variant === 'cardSet'} amount={amount} src={iconSrc} alt=\"\" data-sentry-element=\"CardIcon\" data-sentry-source-file=\"styles.jsx\" />\n    </Tooltip>\n  </>;\n};\nconst CardTooltip = ({\n  displayName,\n  effect,\n  bonus,\n  stars,\n  showInfo,\n  nextLevelReq,\n  amount\n}) => {\n  let realBonus = bonus;\n  if (showInfo) {\n    realBonus = calcCardBonus({\n      bonus,\n      stars\n    });\n  }\n  return <>\n    <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(displayName)}</Typography>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(effect.replace('{', realBonus))}</Typography>\n    {showInfo ? <Stack mt={1} direction={'row'} gap={1} flexWrap={'wrap'}>\n      {[1, 2, 3, 4, 5, 6].map((_, index) => {\n        return <Stack key={`${displayName}-${index}`} alignItems={'center'} justifyContent={'space-between'}>\n          {index === 0 ? <Typography>Base</Typography> : <StarIcon src={`${prefix}etc/Star${index}.png`} alt=\"\" />}\n          <Typography>{bonus * (index + 1)}</Typography>\n        </Stack>;\n      })}\n    </Stack> : null}\n    {amount >= nextLevelReq ? <Stack>You've collected {numberWithCommas(amount)} cards</Stack> : nextLevelReq > 0 ? <Stack>\n        Progress: {numberWithCommas(amount)} / {numberWithCommas(nextLevelReq)}\n      </Stack> : null}\n  </>;\n};\nconst StarIcon = styled.img`\n  height: 20px;\n  object-fit: contain;\n`;\nconst CardIcon = styled.img`\n  width: 56px;\n  height: 72px;\n  object-fit: contain;\n  opacity: ${({\n  amount,\n  isCardSet\n}) => !amount && !isCardSet ? .5 : 1};\n`;\nconst BorderIcon = styled.img`\n  position: absolute;\n  left: 50%;\n  top: -3px;\n  pointer-events: none;\n  transform: translateX(-50%);\n`;\nexport const TalentTooltip = ({\n  level,\n  funcX,\n  x1,\n  x2,\n  funcY,\n  y1,\n  y2,\n  description,\n  name,\n  talentId\n}) => {\n  const mainStat = level > 0 ? growth(funcX, level, x1, x2) : 0;\n  const secondaryStat = level > 0 ? growth(funcY, level, y1, y2) : 0;\n  return <>\n    <Stack direction={'row'} alignItems={'center'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n      <img src={`${prefix}data/UISkillIcon${talentId}.png`} alt=\"\" />\n      <Typography fontWeight={'bold'} variant={'h6'} data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(name)}</Typography>\n    </Stack>\n    <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"styles.jsx\">{cleanUnderscore(description).replace('{', mainStat).replace('}', secondaryStat)}</Typography>\n  </>;\n};\nexport const PlayersList = ({\n  players,\n  characters\n}) => {\n  return <Stack gap={1} direction={'row'} data-sentry-element=\"Stack\" data-sentry-component=\"PlayersList\" data-sentry-source-file=\"styles.jsx\">\n    {players.map(({\n      index\n    }) => <Tooltip key={name + '-head-' + index} title={characters?.[index]?.name}>\n      <img style={{\n        width: 24,\n        height: 24\n      }} src={`${prefix}data/ClassIcons${characters?.[index]?.classIndex}.png`} alt=\"\" />\n    </Tooltip>)}\n  </Stack>;\n};\nexport const MissingData = ({\n  name\n}) => {\n  return <Typography variant={'h3'} data-sentry-element=\"Typography\" data-sentry-component=\"MissingData\" data-sentry-source-file=\"styles.jsx\">Your account is missing data for {name}</Typography>;\n};\nexport const CardTitleAndValue = ({\n  variant,\n  raised,\n  cardSx,\n  imgOnly,\n  imgStyle,\n  title,\n  value,\n  children,\n  icon,\n  tooltipTitle,\n  stackProps,\n  contentPadding\n}) => {\n  return <Tooltip title={tooltipTitle || ''} data-sentry-element=\"Tooltip\" data-sentry-component=\"CardTitleAndValue\" data-sentry-source-file=\"styles.jsx\">\n    <Card variant={variant} raised={raised} sx={{\n      my: {\n        xs: 0,\n        md: 3\n      },\n      width: 'fit-content',\n      ...cardSx\n    }} data-sentry-element=\"Card\" data-sentry-source-file=\"styles.jsx\">\n      <CardContent sx={{\n        '&:last-child': contentPadding ? {\n          p: contentPadding\n        } : {}\n      }} data-sentry-element=\"CardContent\" data-sentry-source-file=\"styles.jsx\">\n        <Stack sx={{\n          display: stackProps ? 'flex' : 'block',\n          ...(stackProps || {})\n        }} data-sentry-element=\"Stack\" data-sentry-source-file=\"styles.jsx\">\n          {title ? <Typography sx={{\n            fontSize: 14\n          }} color=\"text.secondary\" gutterBottom>{title}</Typography> : null}\n          {value || imgOnly ? icon ? <Stack direction={'row'} gap={2} alignItems={'center'}>\n            <img style={{\n              objectFit: 'contain',\n              ...imgStyle\n            }} src={`${prefix}${icon}`} alt=\"\" />\n            {value ? <Typography>{value}</Typography> : null}\n          </Stack> : <Typography>{value}</Typography> : children}\n        </Stack>\n      </CardContent>\n    </Card>\n  </Tooltip>;\n};\nexport const Breakdown = ({\n  breakdown,\n  titleStyle = {},\n  notation = 'Big'\n}) => {\n  return <>\n    {breakdown?.map(({\n      name,\n      value,\n      title\n    }, index) => title ? <Typography sx={{\n      fontWeight: 500\n    }} key={`${name}-${index}`}>{title}</Typography> : !name ? <Divider sx={{\n      my: 1,\n      bgcolor: 'black'\n    }} key={`${name}-${index}`} /> : <TitleAndValue key={`${name}-${index}`} titleStyle={{\n      width: 120,\n      ...titleStyle\n    }} title={name} value={!isNaN(value) ? notateNumber(value, notation) : value} />)}\n  </>;\n};\nexport const CenteredStack = ({\n  direction = 'row',\n  children\n}) => {\n  return <Stack gap={1} direction={direction} alignItems={'center'} data-sentry-element=\"Stack\" data-sentry-component=\"CenteredStack\" data-sentry-source-file=\"styles.jsx\">\n    {children}\n  </Stack>;\n};","import React, { useContext, useMemo } from 'react';\nimport { AppContext } from '../../../components/common/context/AppProvider';\nimport { Box, Card, CardContent, Divider, Stack, Typography } from '@mui/material';\nimport { cleanUnderscore, notateNumber, prefix } from '../../../utility/helpers';\nimport processString from 'react-process-string';\nimport { NextSeo } from 'next-seo';\nimport { calcTotals } from '../../../parsers/printer';\nimport Timer from '../../../components/common/Timer';\nimport { CardTitleAndValue } from '@components/common/styles';\nconst MAX_ATOMS = 11;\nconst AtomCollider = ({}) => {\n  const {\n    state\n  } = useContext(AppContext);\n  const {\n    atoms,\n    particles,\n    stampReducer\n  } = state?.account?.atoms || {};\n  const totals = useMemo(() => calcTotals(state?.account), [state?.account]);\n  return <>\n    <NextSeo title=\"Atom Collider | Idleon Toolbox\" description=\"Atom Collider bonuses and progression\" data-sentry-element=\"NextSeo\" data-sentry-source-file=\"atom-collider.jsx\" />\n    <Stack direction={'row'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"atom-collider.jsx\">\n      <CardTitleAndValue title={'Particles'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"atom-collider.jsx\">\n        <Stack direction={'row'} gap={2} data-sentry-element=\"Stack\" data-sentry-source-file=\"atom-collider.jsx\">\n          <img src={`${prefix}etc/Particle.png`} alt=\"\" style={{\n            objectFit: 'contain'\n          }} />\n          <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"atom-collider.jsx\">{Math.floor(particles)}</Typography>\n        </Stack>\n      </CardTitleAndValue>\n      <CardTitleAndValue title={'Stamp Reducer'} data-sentry-element=\"CardTitleAndValue\" data-sentry-source-file=\"atom-collider.jsx\">\n        <Stack direction={'row'} gap={1} data-sentry-element=\"Stack\" data-sentry-source-file=\"atom-collider.jsx\">\n          <img src={`${prefix}data/Atom0.png`} alt=\"\" style={{\n            objectFit: 'contain',\n            width: 45\n          }} />\n          <Typography data-sentry-element=\"Typography\" data-sentry-source-file=\"atom-collider.jsx\">{stampReducer}%</Typography>\n        </Stack>\n      </CardTitleAndValue>\n    </Stack>\n    <Stack direction={'row'} gap={2} flexWrap={'wrap'} data-sentry-element=\"Stack\" data-sentry-source-file=\"atom-collider.jsx\">\n      {atoms?.map(({\n        name,\n        desc,\n        level,\n        rawName,\n        baseBonus,\n        cost,\n        nextLeveCost,\n        costToMax,\n        bonus,\n        maxLevel\n      }, index) => {\n        if (index >= MAX_ATOMS) return;\n        const description = cleanUnderscore(desc).replace(/{/g, `${baseBonus * level}`).replace(/[>}]/, notateNumber(bonus, 'Big')).replace('<', level);\n        const timeLeft = (cost - particles) / totals?.atom?.atoms * 3600 * 1000;\n        return <Card key={rawName} sx={{\n          outline: level >= maxLevel ? '1px solid' : '',\n          outlineColor: theme => level >= maxLevel ? theme.palette.success.light : ''\n        }}>\n          <CardContent sx={{\n            width: 250,\n            height: '100%'\n          }}>\n            <Stack direction={'column'} sx={{\n              height: '100%'\n            }}>\n              <Stack direction={'row'} alignItems={'center'} gap={1}>\n                <img src={`${prefix}data/${rawName}.png`} alt=\"\" width={64} height={64} style={{\n                  objectFit: 'contain'\n                }} />\n                <Stack>\n                  <Typography>{cleanUnderscore(name)}</Typography>\n                  <Typography>Lv. {level} / {maxLevel}</Typography>\n                  {level < maxLevel ? <>\n                    <Typography variant={'caption'}>Cost: {notateNumber(cost, 'Big')}</Typography>\n                    <Typography variant={'caption'}>Next Level Cost: {notateNumber(nextLeveCost, 'Big')}</Typography>\n                    <Typography variant={'caption'}>Cost To Max: {notateNumber(costToMax, 'Big')}</Typography>\n                  </> : null}\n                </Stack>\n              </Stack>\n              <Divider sx={{\n                my: 2\n              }} />\n              <Typography sx={{\n                mb: 2\n              }} variant={'body1'} component={'div'}>\n                {processString([{\n                  regex: /Total bonus.*/,\n                  fn: (key, result) => {\n                    return <div key={key} style={{\n                      marginTop: 15\n                    }}>{result[0]}</div>;\n                  }\n                }])(description)}\n              </Typography>\n              {level < maxLevel && totals?.atom?.atoms > 0 ? <Box sx={{\n                marginTop: 'auto'\n              }}>\n                <Timer type={'countdown'} placeholder={<Typography color={'success.light'}>Ready!</Typography>} date={new Date().getTime() + timeLeft} lastUpdated={state?.lastUpdated} />\n              </Box> : null}\n            </Stack>\n          </CardContent>\n        </Card>;\n      })}\n    </Stack>\n  </>;\n};\nexport default AtomCollider;","'use strict';\n\nfunction processString(options) {\n    var key = 0;\n\n    function processInputWithRegex(option, input) {\n        if (!option.fn || typeof option.fn !== 'function') return input;\n\n        if (!option.regex || !(option.regex instanceof RegExp)) return input;\n\n        if (typeof input === 'string') {\n            var regex = option.regex;\n            var result = null;\n            var output = [];\n\n            while ((result = regex.exec(input)) !== null) {\n                var index = result.index;\n                var match = result[0];\n\n                output.push(input.substring(0, index));\n                output.push(option.fn(++key, result));\n\n                input = input.substring(index + match.length, input.length + 1);\n                regex.lastIndex = 0;\n            }\n\n            output.push(input);\n            return output;\n        } else if (Array.isArray(input)) {\n            return input.map(function (chunk) {\n                return processInputWithRegex(option, chunk);\n            });\n        } else return input;\n    }\n\n    return function (input) {\n        if (!options || !Array.isArray(options) || !options.length) return input;\n\n        options.forEach(function (option) {\n            return input = processInputWithRegex(option, input);\n        });\n\n        return input;\n    };\n}\n\nmodule.exports = processString;\n\n"],"names":["useBadge","parameters","badgeContent","badgeContentProp","invisible","invisibleProp","max","maxProp","showZero","prevProps","usePreviousProps","Z","displayValue","Number","getBadgeUtilityClass","slot","generateUtilityClass","badgeClasses","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","color","anchorOrigin","overlap","variant","classes","slots","root","badge","capitalize","vertical","horizontal","composeClasses","BadgeRoot","styled","ZP","name","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","esm_extends","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","Badge_badgeClasses","bottom","left","leavingScreen","Badge","react","forwardRef","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","slotProps","variantProp","other","objectWithoutPropertiesLoose","invisibleFromHook","displayValueFromHook","undefined","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx_m","badgeProps","jsx_runtime","jsxs","jsx","Badge_Badge","__webpack_exports__","value","react__WEBPACK_IMPORTED_MODULE_0__","useRef","useEffect","current","window","__NEXT_P","push","__webpack_require__","Timer","param","date","startDate","lastUpdated","stopAtZero","type","pause","staticTime","placeholder","loop","rest","time","setTime","useState","isFinite","getDuration","Date","getTime","tempTime","timePassed","dateIsInPast","isPast","overtime","tickUp","days","hours","minutes","seconds","tickDown","useInterval","wrapNumber","number","strNumber","String","length","concat","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Typography","sx","IconWithText","stat","icon","img","title","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","Tooltip","Stack","style","width","src","prefix","alt","displayName","TitleAndValue","boldTitle","titleStyle","valueStyle","direction","data-sentry-element","data-sentry-component","data-sentry-source-file","StyledBadge","CardAndBorder","cardProps","cardName","stars","cardIndex","rawName","amount","nextLevelReq","iconSrc","Fragment","BorderIcon","CardTooltip","CardIcon","isCardSet","effect","bonus","showInfo","realBonus","calcCardBonus","cleanUnderscore","replace","mt","gap","map","_","index","StarIcon","numberWithCommas","_templateObject1","_templateObject2","_templateObject3","TalentTooltip","level","funcX","x1","x2","funcY","y1","y2","description","talentId","mainStat","growth","secondaryStat","PlayersList","players","characters","classIndex","MissingData","CardTitleAndValue","raised","cardSx","imgOnly","imgStyle","tooltipTitle","stackProps","contentPadding","Card","my","xs","md","CardContent","p","gutterBottom","objectFit","Breakdown","breakdown","notation","notateNumber","Divider","bgcolor","CenteredStack","state","useContext","AppContext","atoms","particles","stampReducer","account","totals","useMemo","calcTotals","NextSeo","Math","floor","desc","baseBonus","cost","nextLeveCost","costToMax","maxLevel","timeLeft","atom","outline","outlineColor","success","light","mb","processString","regex","fn","key","result","div","marginTop","Box","options","processInputWithRegex","option","input","RegExp","output","exec","match","substring","lastIndex","isArray","chunk","Array","forEach","module","exports"],"sourceRoot":""}